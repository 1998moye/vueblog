{"remainingRequest":"D:\\IdeaWorkSpace\\springBootDemo2\\myblog-vue2\\node_modules\\babel-loader\\lib\\index.js!D:\\IdeaWorkSpace\\springBootDemo2\\myblog-vue2\\node_modules\\vuetify\\lib\\components\\VProgressCircular\\VProgressCircular.mjs","dependencies":[{"path":"D:\\IdeaWorkSpace\\springBootDemo2\\myblog-vue2\\node_modules\\vuetify\\lib\\components\\VProgressCircular\\VProgressCircular.mjs","mtime":499162500000},{"path":"D:\\IdeaWorkSpace\\springBootDemo2\\myblog-vue2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IdeaWorkSpace\\springBootDemo2\\myblog-vue2\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiRDovSWRlYVdvcmtTcGFjZS9zcHJpbmdCb290RGVtbzIvbXlibG9nLXZ1ZTIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIuY29uc3RydWN0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwppbXBvcnQgeyBjcmVhdGVWTm9kZSBhcyBfY3JlYXRlVk5vZGUgfSBmcm9tICJ2dWUiOyAvLyBTdHlsZXMKCmltcG9ydCAiLi9WUHJvZ3Jlc3NDaXJjdWxhci5zYXNzIjsgLy8gQ29tcG9zYWJsZXMKCmltcG9ydCB7IG1ha2VTaXplUHJvcHMsIHVzZVNpemUgfSBmcm9tICIuLi8uLi9jb21wb3NhYmxlcy9zaXplLm1qcyI7CmltcG9ydCB7IG1ha2VUYWdQcm9wcyB9IGZyb20gIi4uLy4uL2NvbXBvc2FibGVzL3RhZy5tanMiOwppbXBvcnQgeyBtYWtlVGhlbWVQcm9wcywgdXNlVGhlbWUgfSBmcm9tICIuLi8uLi9jb21wb3NhYmxlcy90aGVtZS5tanMiOwppbXBvcnQgeyB1c2VJbnRlcnNlY3Rpb25PYnNlcnZlciB9IGZyb20gIi4uLy4uL2NvbXBvc2FibGVzL2ludGVyc2VjdGlvbk9ic2VydmVyLm1qcyI7CmltcG9ydCB7IHVzZVRleHRDb2xvciB9IGZyb20gIi4uLy4uL2NvbXBvc2FibGVzL2NvbG9yLm1qcyI7IC8vIFV0aWxpdGllcwoKaW1wb3J0IHsgY29tcHV0ZWQsIHRvUmVmIH0gZnJvbSAndnVlJzsKaW1wb3J0IHsgY29udmVydFRvVW5pdCwgZGVmaW5lQ29tcG9uZW50IH0gZnJvbSAiLi4vLi4vdXRpbC9pbmRleC5tanMiOyAvLyBUeXBlcwoKZXhwb3J0IGRlZmF1bHQgZGVmaW5lQ29tcG9uZW50KHsKICBuYW1lOiAnVlByb2dyZXNzQ2lyY3VsYXInLAogIHByb3BzOiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7CiAgICBiZ0NvbG9yOiBTdHJpbmcsCiAgICBjb2xvcjogU3RyaW5nLAogICAgaW5kZXRlcm1pbmF0ZTogW0Jvb2xlYW4sIFN0cmluZ10sCiAgICBtb2RlbFZhbHVlOiB7CiAgICAgIHR5cGU6IFtOdW1iZXIsIFN0cmluZ10sCiAgICAgIGRlZmF1bHQ6IDAKICAgIH0sCiAgICByb3RhdGU6IHsKICAgICAgdHlwZTogW051bWJlciwgU3RyaW5nXSwKICAgICAgZGVmYXVsdDogMAogICAgfSwKICAgIHdpZHRoOiB7CiAgICAgIHR5cGU6IFtOdW1iZXIsIFN0cmluZ10sCiAgICAgIGRlZmF1bHQ6IDQKICAgIH0KICB9LCBtYWtlU2l6ZVByb3BzKCkpLCBtYWtlVGFnUHJvcHMoewogICAgdGFnOiAnZGl2JwogIH0pKSwgbWFrZVRoZW1lUHJvcHMoKSksCiAgc2V0dXA6IGZ1bmN0aW9uIHNldHVwKHByb3BzLCBfcmVmKSB7CiAgICB2YXIgc2xvdHMgPSBfcmVmLnNsb3RzOwogICAgdmFyIE1BR0lDX1JBRElVU19DT05TVEFOVCA9IDIwOwogICAgdmFyIENJUkNVTUZFUkVOQ0UgPSAyICogTWF0aC5QSSAqIE1BR0lDX1JBRElVU19DT05TVEFOVDsKCiAgICB2YXIgX3VzZVRoZW1lID0gdXNlVGhlbWUocHJvcHMpLAogICAgICAgIHRoZW1lQ2xhc3NlcyA9IF91c2VUaGVtZS50aGVtZUNsYXNzZXM7CgogICAgdmFyIF91c2VTaXplID0gdXNlU2l6ZShwcm9wcywgJ3YtcHJvZ3Jlc3MtY2lyY3VsYXInKSwKICAgICAgICBzaXplQ2xhc3NlcyA9IF91c2VTaXplLnNpemVDbGFzc2VzLAogICAgICAgIHNpemVTdHlsZXMgPSBfdXNlU2l6ZS5zaXplU3R5bGVzOwoKICAgIHZhciBfdXNlVGV4dENvbG9yID0gdXNlVGV4dENvbG9yKHRvUmVmKHByb3BzLCAnY29sb3InKSksCiAgICAgICAgdGV4dENvbG9yQ2xhc3NlcyA9IF91c2VUZXh0Q29sb3IudGV4dENvbG9yQ2xhc3NlcywKICAgICAgICB0ZXh0Q29sb3JTdHlsZXMgPSBfdXNlVGV4dENvbG9yLnRleHRDb2xvclN0eWxlczsKCiAgICB2YXIgX3VzZVRleHRDb2xvcjIgPSB1c2VUZXh0Q29sb3IodG9SZWYocHJvcHMsICdiZ0NvbG9yJykpLAogICAgICAgIHVuZGVybGF5Q29sb3JDbGFzc2VzID0gX3VzZVRleHRDb2xvcjIudGV4dENvbG9yQ2xhc3NlcywKICAgICAgICB1bmRlcmxheUNvbG9yU3R5bGVzID0gX3VzZVRleHRDb2xvcjIudGV4dENvbG9yU3R5bGVzOwoKICAgIHZhciBfdXNlSW50ZXJzZWN0aW9uT2JzZXIgPSB1c2VJbnRlcnNlY3Rpb25PYnNlcnZlcigpLAogICAgICAgIGludGVyc2VjdGlvblJlZiA9IF91c2VJbnRlcnNlY3Rpb25PYnNlci5pbnRlcnNlY3Rpb25SZWYsCiAgICAgICAgaXNJbnRlcnNlY3RpbmcgPSBfdXNlSW50ZXJzZWN0aW9uT2JzZXIuaXNJbnRlcnNlY3Rpbmc7CgogICAgdmFyIG5vcm1hbGl6ZWRWYWx1ZSA9IGNvbXB1dGVkKGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIE1hdGgubWF4KDAsIE1hdGgubWluKDEwMCwgcGFyc2VGbG9hdChwcm9wcy5tb2RlbFZhbHVlKSkpOwogICAgfSk7CiAgICB2YXIgd2lkdGggPSBjb21wdXRlZChmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBOdW1iZXIocHJvcHMud2lkdGgpOwogICAgfSk7CiAgICB2YXIgc2l6ZSA9IGNvbXB1dGVkKGZ1bmN0aW9uICgpIHsKICAgICAgLy8gR2V0IHNpemUgZnJvbSBlbGVtZW50IGlmIHNpemUgcHJvcCB2YWx1ZSBpcyBzbWFsbCwgbGFyZ2UgZXRjCiAgICAgIHJldHVybiBzaXplU3R5bGVzLnZhbHVlID8gTnVtYmVyKHByb3BzLnNpemUpIDogaW50ZXJzZWN0aW9uUmVmLnZhbHVlID8gaW50ZXJzZWN0aW9uUmVmLnZhbHVlLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLndpZHRoIDogTWF0aC5tYXgod2lkdGgudmFsdWUsIDMyKTsKICAgIH0pOwogICAgdmFyIGRpYW1ldGVyID0gY29tcHV0ZWQoZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gTUFHSUNfUkFESVVTX0NPTlNUQU5UIC8gKDEgLSB3aWR0aC52YWx1ZSAvIHNpemUudmFsdWUpICogMjsKICAgIH0pOwogICAgdmFyIHN0cm9rZVdpZHRoID0gY29tcHV0ZWQoZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gd2lkdGgudmFsdWUgLyBzaXplLnZhbHVlICogZGlhbWV0ZXIudmFsdWU7CiAgICB9KTsKICAgIHZhciBzdHJva2VEYXNoT2Zmc2V0ID0gY29tcHV0ZWQoZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gY29udmVydFRvVW5pdCgoMTAwIC0gbm9ybWFsaXplZFZhbHVlLnZhbHVlKSAvIDEwMCAqIENJUkNVTUZFUkVOQ0UpOwogICAgfSk7CiAgICByZXR1cm4gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gX2NyZWF0ZVZOb2RlKHByb3BzLnRhZywgewogICAgICAgICJyZWYiOiBpbnRlcnNlY3Rpb25SZWYsCiAgICAgICAgImNsYXNzIjogWyd2LXByb2dyZXNzLWNpcmN1bGFyJywgewogICAgICAgICAgJ3YtcHJvZ3Jlc3MtY2lyY3VsYXItLWluZGV0ZXJtaW5hdGUnOiAhIXByb3BzLmluZGV0ZXJtaW5hdGUsCiAgICAgICAgICAndi1wcm9ncmVzcy1jaXJjdWxhci0tdmlzaWJsZSc6IGlzSW50ZXJzZWN0aW5nLnZhbHVlLAogICAgICAgICAgJ3YtcHJvZ3Jlc3MtY2lyY3VsYXItLWRpc2FibGUtc2hyaW5rJzogcHJvcHMuaW5kZXRlcm1pbmF0ZSA9PT0gJ2Rpc2FibGUtc2hyaW5rJwogICAgICAgIH0sIHRoZW1lQ2xhc3Nlcy52YWx1ZSwgc2l6ZUNsYXNzZXMudmFsdWUsIHRleHRDb2xvckNsYXNzZXMudmFsdWVdLAogICAgICAgICJzdHlsZSI6IFtzaXplU3R5bGVzLnZhbHVlLCB0ZXh0Q29sb3JTdHlsZXMudmFsdWVdLAogICAgICAgICJyb2xlIjogInByb2dyZXNzYmFyIiwKICAgICAgICAiYXJpYS12YWx1ZW1pbiI6ICIwIiwKICAgICAgICAiYXJpYS12YWx1ZW1heCI6ICIxMDAiLAogICAgICAgICJhcmlhLXZhbHVlbm93IjogcHJvcHMuaW5kZXRlcm1pbmF0ZSA/IHVuZGVmaW5lZCA6IG5vcm1hbGl6ZWRWYWx1ZS52YWx1ZQogICAgICB9LCB7CiAgICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgICByZXR1cm4gW19jcmVhdGVWTm9kZSgic3ZnIiwgewogICAgICAgICAgICAic3R5bGUiOiB7CiAgICAgICAgICAgICAgdHJhbnNmb3JtOiAicm90YXRlKGNhbGMoLTkwZGVnICsgIi5jb25jYXQoTnVtYmVyKHByb3BzLnJvdGF0ZSksICJkZWcpKSIpCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ4bWxucyI6ICJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIsCiAgICAgICAgICAgICJ2aWV3Qm94IjogIjAgMCAiLmNvbmNhdChkaWFtZXRlci52YWx1ZSwgIiAiKS5jb25jYXQoZGlhbWV0ZXIudmFsdWUpCiAgICAgICAgICB9LCBbX2NyZWF0ZVZOb2RlKCJjaXJjbGUiLCB7CiAgICAgICAgICAgICJjbGFzcyI6IFsndi1wcm9ncmVzcy1jaXJjdWxhcl9fdW5kZXJsYXknLCB1bmRlcmxheUNvbG9yQ2xhc3Nlcy52YWx1ZV0sCiAgICAgICAgICAgICJzdHlsZSI6IHVuZGVybGF5Q29sb3JTdHlsZXMudmFsdWUsCiAgICAgICAgICAgICJmaWxsIjogInRyYW5zcGFyZW50IiwKICAgICAgICAgICAgImN4IjogIjUwJSIsCiAgICAgICAgICAgICJjeSI6ICI1MCUiLAogICAgICAgICAgICAiciI6IE1BR0lDX1JBRElVU19DT05TVEFOVCwKICAgICAgICAgICAgInN0cm9rZS13aWR0aCI6IHN0cm9rZVdpZHRoLnZhbHVlLAogICAgICAgICAgICAic3Ryb2tlLWRhc2hhcnJheSI6IENJUkNVTUZFUkVOQ0UsCiAgICAgICAgICAgICJzdHJva2UtZGFzaG9mZnNldCI6IDAKICAgICAgICAgIH0sIG51bGwsIDE0LCBbInIiLCAic3Ryb2tlLXdpZHRoIiwgInN0cm9rZS1kYXNoYXJyYXkiXSksIF9jcmVhdGVWTm9kZSgiY2lyY2xlIiwgewogICAgICAgICAgICAiY2xhc3MiOiAidi1wcm9ncmVzcy1jaXJjdWxhcl9fb3ZlcmxheSIsCiAgICAgICAgICAgICJmaWxsIjogInRyYW5zcGFyZW50IiwKICAgICAgICAgICAgImN4IjogIjUwJSIsCiAgICAgICAgICAgICJjeSI6ICI1MCUiLAogICAgICAgICAgICAiciI6IE1BR0lDX1JBRElVU19DT05TVEFOVCwKICAgICAgICAgICAgInN0cm9rZS13aWR0aCI6IHN0cm9rZVdpZHRoLnZhbHVlLAogICAgICAgICAgICAic3Ryb2tlLWRhc2hhcnJheSI6IENJUkNVTUZFUkVOQ0UsCiAgICAgICAgICAgICJzdHJva2UtZGFzaG9mZnNldCI6IHN0cm9rZURhc2hPZmZzZXQudmFsdWUKICAgICAgICAgIH0sIG51bGwsIDgsIFsiciIsICJzdHJva2Utd2lkdGgiLCAic3Ryb2tlLWRhc2hhcnJheSIsICJzdHJva2UtZGFzaG9mZnNldCJdKV0pLCBzbG90cy5kZWZhdWx0ICYmIF9jcmVhdGVWTm9kZSgiZGl2IiwgewogICAgICAgICAgICAiY2xhc3MiOiAidi1wcm9ncmVzcy1jaXJjdWxhcl9fY29udGVudCIKICAgICAgICAgIH0sIFtzbG90cy5kZWZhdWx0KHsKICAgICAgICAgICAgdmFsdWU6IG5vcm1hbGl6ZWRWYWx1ZS52YWx1ZQogICAgICAgICAgfSldKV07CiAgICAgICAgfSwKICAgICAgICBfOiAxCiAgICAgIH0sIDgsIFsiY2xhc3MiLCAic3R5bGUiLCAiYXJpYS12YWx1ZW5vdyJdKTsKICAgIH07CiAgfQp9KTs="},{"version":3,"sources":["../../../src/components/VProgressCircular/VProgressCircular.tsx"],"names":["makeSizeProps","useSize","makeTagProps","makeThemeProps","useTheme","useIntersectionObserver","useTextColor","convertToUnit","defineComponent","name","props","bgColor","color","indeterminate","modelValue","type","default","rotate","width","tag","setup","slots","MAGIC_RADIUS_CONSTANT","CIRCUMFERENCE","Math","themeClasses","sizeStyles","textColorStyles","toRef","textColorClasses","underlayColorStyles","isIntersecting","normalizedValue","computed","parseFloat","Number","size","intersectionRef","diameter","strokeWidth","strokeDashOffset","sizeClasses","value","transform","underlayColorClasses"],"mappings":"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","sourcesContent":["// Styles\nimport './VProgressCircular.sass'\n\n// Composables\nimport { makeSizeProps, useSize } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, useTheme } from '@/composables/theme'\nimport { useIntersectionObserver } from '@/composables/intersectionObserver'\nimport { useTextColor } from '@/composables/color'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { convertToUnit, defineComponent } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nexport default defineComponent({\n  name: 'VProgressCircular',\n\n  props: {\n    bgColor: String,\n    color: String,\n    indeterminate: [Boolean, String] as PropType<boolean | 'disable-shrink'>,\n    modelValue: {\n      type: [Number, String],\n      default: 0,\n    },\n    rotate: {\n      type: [Number, String],\n      default: 0,\n    },\n    width: {\n      type: [Number, String],\n      default: 4,\n    },\n\n    ...makeSizeProps(),\n    ...makeTagProps({ tag: 'div' }),\n    ...makeThemeProps(),\n  },\n\n  setup (props, { slots }) {\n    const MAGIC_RADIUS_CONSTANT = 20\n    const CIRCUMFERENCE = 2 * Math.PI * MAGIC_RADIUS_CONSTANT\n\n    const { themeClasses } = useTheme(props)\n    const { sizeClasses, sizeStyles } = useSize(props, 'v-progress-circular')\n    const { textColorClasses, textColorStyles } = useTextColor(toRef(props, 'color'))\n    const { textColorClasses: underlayColorClasses, textColorStyles: underlayColorStyles } = useTextColor(toRef(props, 'bgColor'))\n    const { intersectionRef, isIntersecting } = useIntersectionObserver()\n\n    const normalizedValue = computed(() => Math.max(0, Math.min(100, parseFloat(props.modelValue))))\n    const width = computed(() => Number(props.width))\n    const size = computed(() => {\n      // Get size from element if size prop value is small, large etc\n      return sizeStyles.value ? Number(props.size) : intersectionRef.value\n        ? intersectionRef.value.getBoundingClientRect().width : Math.max(width.value, 32)\n    })\n    const diameter = computed(() => (MAGIC_RADIUS_CONSTANT / (1 - width.value / size.value)) * 2)\n    const strokeWidth = computed(() => width.value / size.value * diameter.value)\n    const strokeDashOffset = computed(() => convertToUnit(((100 - normalizedValue.value) / 100) * CIRCUMFERENCE))\n\n    return () => (\n      <props.tag\n        ref={ intersectionRef }\n        class={[\n          'v-progress-circular',\n          {\n            'v-progress-circular--indeterminate': !!props.indeterminate,\n            'v-progress-circular--visible': isIntersecting.value,\n            'v-progress-circular--disable-shrink': props.indeterminate === 'disable-shrink',\n          },\n          themeClasses.value,\n          sizeClasses.value,\n          textColorClasses.value,\n        ]}\n        style={[\n          sizeStyles.value,\n          textColorStyles.value,\n        ]}\n        role=\"progressbar\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n        aria-valuenow={ props.indeterminate ? undefined : normalizedValue.value }\n      >\n        <svg\n          style={{\n            transform: `rotate(calc(-90deg + ${Number(props.rotate)}deg))`,\n          }}\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox={ `0 0 ${diameter.value} ${diameter.value}` }\n        >\n          <circle\n            class={[\n              'v-progress-circular__underlay',\n              underlayColorClasses.value,\n            ]}\n            style={ underlayColorStyles.value }\n            fill=\"transparent\"\n            cx=\"50%\"\n            cy=\"50%\"\n            r={ MAGIC_RADIUS_CONSTANT }\n            stroke-width={ strokeWidth.value }\n            stroke-dasharray={ CIRCUMFERENCE }\n            stroke-dashoffset={ 0 }\n          />\n\n          <circle\n            class=\"v-progress-circular__overlay\"\n            fill=\"transparent\"\n            cx=\"50%\"\n            cy=\"50%\"\n            r={ MAGIC_RADIUS_CONSTANT }\n            stroke-width={ strokeWidth.value }\n            stroke-dasharray={ CIRCUMFERENCE }\n            stroke-dashoffset={ strokeDashOffset.value }\n          />\n        </svg>\n        { slots.default && (\n          <div class=\"v-progress-circular__content\">\n            { slots.default({ value: normalizedValue.value }) }\n          </div>\n        ) }\n      </props.tag>\n    )\n  },\n})\n"]}]}