{"remainingRequest":"D:\\IdeaWorkSpace\\springBootDemo2\\myblog-vue2\\node_modules\\babel-loader\\lib\\index.js!D:\\IdeaWorkSpace\\springBootDemo2\\myblog-vue2\\node_modules\\vuetify\\lib\\components\\VImg\\VImg.mjs","dependencies":[{"path":"D:\\IdeaWorkSpace\\springBootDemo2\\myblog-vue2\\node_modules\\vuetify\\lib\\components\\VImg\\VImg.mjs","mtime":499162500000},{"path":"D:\\IdeaWorkSpace\\springBootDemo2\\myblog-vue2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IdeaWorkSpace\\springBootDemo2\\myblog-vue2\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["../../../src/components/VImg/VImg.tsx"],"names":["VResponsive","intersect","makeTransitionProps","MaybeTransition","defineComponent","SUPPORTS_INTERSECTION","useRender","name","directives","props","aspectRatio","alt","cover","eager","lazySrc","options","type","default","root","rootMargin","threshold","undefined","position","sizes","src","srcset","emits","setup","slots","currentSrc","ref","image","state","naturalWidth","naturalHeight","normalisedSrc","computed","aspect","Number","watch","init","onBeforeMount","nextTick","emit","onError","pollForSize","onLoad","getSrc","lazyImg","img","timeout","poll","imgWidth","imgHeight","setTimeout","containClasses","__image","h","class","sources","withDirectives","__preloadImage","transition","__placeholder","__error","handler","additional"],"mappings":"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","sourcesContent":["import './VImg.sass'\n\n// Components\nimport { VResponsive } from '@/components/VResponsive'\n\n// Directives\nimport intersect from '@/directives/intersect'\n\n// Composables\nimport { makeTransitionProps, MaybeTransition } from '@/composables/transition'\n\n// Utilities\nimport {\n  computed,\n  h,\n  nextTick,\n  onBeforeMount,\n  ref,\n  vShow,\n  watch,\n  withDirectives,\n} from 'vue'\nimport {\n  defineComponent,\n  SUPPORTS_INTERSECTION,\n  useRender,\n} from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\n// not intended for public use, this is passed in by vuetify-loader\nexport interface srcObject {\n  src?: string\n  srcset?: string\n  lazySrc?: string\n  aspect: number\n}\n\nexport default defineComponent({\n  name: 'VImg',\n\n  directives: { intersect },\n\n  props: {\n    aspectRatio: [String, Number],\n    alt: String,\n    cover: Boolean,\n    eager: Boolean,\n    lazySrc: String,\n    options: {\n      type: Object as PropType<IntersectionObserverInit>,\n      // For more information on types, navigate to:\n      // https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n      default: () => ({\n        root: undefined,\n        rootMargin: undefined,\n        threshold: undefined,\n      }),\n    },\n    position: {\n      type: String,\n      default: 'center center',\n    },\n    sizes: String,\n    src: {\n      type: [String, Object] as PropType<string | srcObject>,\n      default: '',\n    },\n    srcset: String,\n\n    ...makeTransitionProps(),\n  },\n\n  emits: ['loadstart', 'load', 'error'],\n\n  setup (props, { emit, slots }) {\n    const currentSrc = ref('') // Set from srcset\n    const image = ref<HTMLImageElement>()\n    const state = ref<'idle' | 'loading' | 'loaded' | 'error'>(props.eager ? 'loading' : 'idle')\n    const naturalWidth = ref<number>()\n    const naturalHeight = ref<number>()\n\n    const normalisedSrc = computed<srcObject>(() => {\n      return props.src && typeof props.src === 'object'\n        ? {\n          src: props.src.src,\n          srcset: props.srcset || props.src.srcset,\n          lazySrc: props.lazySrc || props.src.lazySrc,\n          aspect: Number(props.aspectRatio || props.src.aspect),\n        } : {\n          src: props.src,\n          srcset: props.srcset,\n          lazySrc: props.lazySrc,\n          aspect: Number(props.aspectRatio || 0),\n        }\n    })\n    const aspectRatio = computed(() => {\n      return normalisedSrc.value.aspect || naturalWidth.value! / naturalHeight.value! || 0\n    })\n\n    watch(() => props.src, () => {\n      init(state.value !== 'idle')\n    })\n    // TODO: getSrc when window width changes\n\n    onBeforeMount(() => init())\n\n    function init (isIntersecting?: boolean) {\n      if (props.eager && isIntersecting) return\n      if (\n        SUPPORTS_INTERSECTION &&\n        !isIntersecting &&\n        !props.eager\n      ) return\n\n      state.value = 'loading'\n      nextTick(() => {\n        emit('loadstart', image.value?.currentSrc || normalisedSrc.value.src)\n\n        if (image.value?.complete) {\n          if (!image.value.naturalWidth) {\n            onError()\n          }\n\n          if (state.value === 'error') return\n\n          if (!aspectRatio.value) pollForSize(image.value, null)\n          onLoad()\n        } else {\n          if (!aspectRatio.value) pollForSize(image.value!)\n          getSrc()\n        }\n      })\n\n      if (normalisedSrc.value.lazySrc) {\n        const lazyImg = new Image()\n        lazyImg.src = normalisedSrc.value.lazySrc\n        pollForSize(lazyImg, null)\n      }\n    }\n\n    function onLoad () {\n      getSrc()\n      state.value = 'loaded'\n      emit('load', image.value?.currentSrc || normalisedSrc.value.src)\n    }\n\n    function onError () {\n      state.value = 'error'\n      emit('error', image.value?.currentSrc || normalisedSrc.value.src)\n    }\n\n    function getSrc () {\n      const img = image.value\n      if (img) currentSrc.value = img.currentSrc || img.src\n    }\n\n    function pollForSize (img: HTMLImageElement, timeout: number | null = 100) {\n      const poll = () => {\n        const { naturalHeight: imgHeight, naturalWidth: imgWidth } = img\n\n        if (imgHeight || imgWidth) {\n          naturalWidth.value = imgWidth\n          naturalHeight.value = imgHeight\n        } else if (!img.complete && state.value === 'loading' && timeout != null) {\n          setTimeout(poll, timeout)\n        } else if (img.currentSrc.endsWith('.svg') || img.currentSrc.startsWith('data:image/svg+xml')) {\n          naturalWidth.value = 1\n          naturalHeight.value = 1\n        }\n      }\n\n      poll()\n    }\n\n    const containClasses = computed(() => ({\n      'v-img__img--cover': props.cover,\n      'v-img__img--contain': !props.cover,\n    }))\n\n    const __image = computed(() => {\n      if (!normalisedSrc.value.src || state.value === 'idle') return\n\n      const img = h('img', {\n        class: ['v-img__img', containClasses.value],\n        src: normalisedSrc.value.src,\n        srcset: normalisedSrc.value.srcset,\n        sizes: props.sizes,\n        ref: image,\n        onLoad,\n        onError,\n      })\n\n      const sources = slots.sources?.()\n\n      return (\n        <MaybeTransition transition={ props.transition } appear>\n          {\n            withDirectives(\n              sources\n                ? <picture class=\"v-img__picture\">{ sources }{ img }</picture>\n                : img,\n              [[vShow, state.value === 'loaded']]\n            )\n          }\n        </MaybeTransition>\n      )\n    })\n\n    const __preloadImage = computed(() => (\n      <MaybeTransition transition={ props.transition }>\n        { normalisedSrc.value.lazySrc && state.value !== 'loaded' && (\n          <img\n            class={['v-img__img', 'v-img__img--preload', containClasses.value]}\n            src={ normalisedSrc.value.lazySrc }\n            alt=\"\"\n          />\n        )}\n      </MaybeTransition>\n    ))\n\n    const __placeholder = computed(() => {\n      if (!slots.placeholder) return\n\n      return (\n        <MaybeTransition transition={ props.transition } appear>\n          { (state.value === 'loading' || (state.value === 'error' && !slots.error)) &&\n          <div class=\"v-img__placeholder\">{ slots.placeholder() }</div>\n          }\n        </MaybeTransition>\n      )\n    })\n\n    const __error = computed(() => {\n      if (!slots.error) return\n\n      return (\n        <MaybeTransition transition={ props.transition } appear>\n          { state.value === 'error' &&\n            <div class=\"v-img__error\">{ slots.error() }</div>\n          }\n        </MaybeTransition>\n      )\n    })\n\n    useRender(() => (\n      <VResponsive\n        class=\"v-img\"\n        aspectRatio={ aspectRatio.value }\n        aria-label={ props.alt }\n        role={ props.alt ? 'img' : undefined }\n        v-intersect={[{\n          handler: init,\n          options: props.options,\n        }, null, ['once']]}\n        v-slots={{\n          additional: () => [__image.value, __preloadImage.value, __placeholder.value, __error.value],\n          default: slots.default,\n        }}\n      />\n    ))\n\n    return {\n      currentSrc,\n      image,\n      state,\n      naturalWidth,\n      naturalHeight,\n    }\n  },\n})\n"]}]}