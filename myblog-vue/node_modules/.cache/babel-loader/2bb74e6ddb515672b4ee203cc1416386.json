{"remainingRequest":"D:\\IdeaWorkSpace\\springBootDemo2\\myblog-vue2\\node_modules\\babel-loader\\lib\\index.js!D:\\IdeaWorkSpace\\springBootDemo2\\myblog-vue2\\node_modules\\vuetify\\lib\\composables\\resizeObserver.mjs","dependencies":[{"path":"D:\\IdeaWorkSpace\\springBootDemo2\\myblog-vue2\\node_modules\\vuetify\\lib\\composables\\resizeObserver.mjs","mtime":499162500000},{"path":"D:\\IdeaWorkSpace\\springBootDemo2\\myblog-vue2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IdeaWorkSpace\\springBootDemo2\\myblog-vue2\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8gVXRpbGl0aWVzCmltcG9ydCB7IG9uQmVmb3JlVW5tb3VudCwgcmVhZG9ubHksIHJlZiwgd2F0Y2ggfSBmcm9tICd2dWUnOwpleHBvcnQgZnVuY3Rpb24gdXNlUmVzaXplT2JzZXJ2ZXIoY2FsbGJhY2spIHsKICB2YXIgcmVzaXplUmVmID0gcmVmKCk7CiAgdmFyIGNvbnRlbnRSZWN0ID0gcmVmKCk7CiAgdmFyIGNvbnRlbnRCb3hTaXplID0gcmVmKCk7CiAgdmFyIGJvcmRlckJveFNpemUgPSByZWYoKTsKICB2YXIgb2JzZXJ2ZXIgPSBuZXcgUmVzaXplT2JzZXJ2ZXIoZnVuY3Rpb24gKGVudHJpZXMpIHsKICAgIGNhbGxiYWNrID09IG51bGwgPyB2b2lkIDAgOiBjYWxsYmFjayhlbnRyaWVzLCBvYnNlcnZlcik7CiAgICBpZiAoIWVudHJpZXMubGVuZ3RoKSByZXR1cm47CiAgICBjb250ZW50UmVjdC52YWx1ZSA9IGVudHJpZXNbMF0uY29udGVudFJlY3Q7CiAgICBjb250ZW50Qm94U2l6ZS52YWx1ZSA9IGVudHJpZXNbMF0uY29udGVudEJveFNpemVbMF07CiAgICBib3JkZXJCb3hTaXplLnZhbHVlID0gZW50cmllc1swXS5ib3JkZXJCb3hTaXplWzBdOwogIH0pOwogIG9uQmVmb3JlVW5tb3VudChmdW5jdGlvbiAoKSB7CiAgICBvYnNlcnZlci5kaXNjb25uZWN0KCk7CiAgfSk7CiAgd2F0Y2gocmVzaXplUmVmLCBmdW5jdGlvbiAobmV3VmFsdWUsIG9sZFZhbHVlKSB7CiAgICBpZiAob2xkVmFsdWUpIHsKICAgICAgb2JzZXJ2ZXIudW5vYnNlcnZlKG9sZFZhbHVlKTsKICAgICAgY29udGVudFJlY3QudmFsdWUgPSB1bmRlZmluZWQ7CiAgICAgIGNvbnRlbnRCb3hTaXplLnZhbHVlID0gdW5kZWZpbmVkOwogICAgICBib3JkZXJCb3hTaXplLnZhbHVlID0gdW5kZWZpbmVkOwogICAgfQoKICAgIGlmIChuZXdWYWx1ZSkgb2JzZXJ2ZXIub2JzZXJ2ZShuZXdWYWx1ZSk7CiAgfSwgewogICAgZmx1c2g6ICdwb3N0JwogIH0pOwogIHJldHVybiB7CiAgICByZXNpemVSZWY6IHJlc2l6ZVJlZiwKICAgIGNvbnRlbnRSZWN0OiByZWFkb25seShjb250ZW50UmVjdCksCiAgICBjb250ZW50Qm94U2l6ZTogcmVhZG9ubHkoY29udGVudEJveFNpemUpLAogICAgYm9yZGVyQm94U2l6ZTogcmVhZG9ubHkoYm9yZGVyQm94U2l6ZSkKICB9Owp9"},{"version":3,"sources":["../../src/composables/resizeObserver.ts"],"names":["resizeRef","ref","contentRect","contentBoxSize","borderBoxSize","observer","entries","callback","onBeforeUnmount","watch","flush","readonly"],"mappings":"AAAA;AACA,SAAA,eAAA,EAAA,QAAA,EAAA,GAAA,EAAA,KAAA,QAAA,KAAA;AAUA,OAAO,SAAA,iBAAA,CAAA,QAAA,EAA4E;AACjF,MAAMA,SAAS,GAAGC,GAAlB,EAAA;AACA,MAAMC,WAAW,GAAGD,GAApB,EAAA;AACA,MAAME,cAAc,GAAGF,GAAvB,EAAA;AACA,MAAMG,aAAa,GAAGH,GAAtB,EAAA;AAEA,MAAMI,QAAQ,GAAG,IAAA,cAAA,CAAoBC,UAAAA,OAAD,EAAoC;AACtEC,IAAAA,QAAQ,IAARA,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,QAAQ,CAAA,OAAA,EAARA,QAAQ,CAARA;AAEA,QAAI,CAACD,OAAO,CAAZ,MAAA,EAAqB;AAErBJ,IAAAA,WAAW,CAAXA,KAAAA,GAAoBI,OAAO,CAAPA,CAAO,CAAPA,CAApBJ,WAAAA;AACAC,IAAAA,cAAc,CAAdA,KAAAA,GAAuBG,OAAO,CAAPA,CAAO,CAAPA,CAAAA,cAAAA,CAAvBH,CAAuBG,CAAvBH;AACAC,IAAAA,aAAa,CAAbA,KAAAA,GAAsBE,OAAO,CAAPA,CAAO,CAAPA,CAAAA,aAAAA,CAAtBF,CAAsBE,CAAtBF;AAPF,GAAiB,CAAjB;AAUAI,EAAAA,eAAe,CAAC,YAAM;AACpBH,IAAAA,QAAQ,CAARA,UAAAA;AADFG,GAAe,CAAfA;AAIAC,EAAAA,KAAK,CAAA,SAAA,EAAY,UAAA,QAAA,EAAA,QAAA,EAAwB;AACvC,QAAA,QAAA,EAAc;AACZJ,MAAAA,QAAQ,CAARA,SAAAA,CAAAA,QAAAA;AACAH,MAAAA,WAAW,CAAXA,KAAAA,GAAAA,SAAAA;AACAC,MAAAA,cAAc,CAAdA,KAAAA,GAAAA,SAAAA;AACAC,MAAAA,aAAa,CAAbA,KAAAA,GAAAA,SAAAA;AACD;;AAED,QAAA,QAAA,EAAcC,QAAQ,CAARA,OAAAA,CAAAA,QAAAA;AARX,GAAA,EASF;AACDK,IAAAA,KAAK,EAAE;AADN,GATE,CAALD;AAaA,SAAO;AACLT,IAAAA,SADK,EACLA,SADK;AAELE,IAAAA,WAAW,EAAES,QAAQ,CAFhB,WAEgB,CAFhB;AAGLR,IAAAA,cAAc,EAAEQ,QAAQ,CAHnB,cAGmB,CAHnB;AAILP,IAAAA,aAAa,EAAEO,QAAQ,CAAA,aAAA;AAJlB,GAAP;AAMD","sourcesContent":["// Utilities\nimport { onBeforeUnmount, readonly, ref, watch } from 'vue'\nimport type { DeepReadonly, Ref } from 'vue'\n\ninterface ResizeState {\n  resizeRef: Ref<Element | undefined>\n  contentRect: DeepReadonly<Ref<DOMRectReadOnly | undefined>>\n  borderBoxSize: DeepReadonly<Ref<ResizeObserverSize | undefined>>\n  contentBoxSize: DeepReadonly<Ref<ResizeObserverSize | undefined>>\n}\n\nexport function useResizeObserver (callback?: ResizeObserverCallback): ResizeState {\n  const resizeRef = ref<Element>()\n  const contentRect = ref<DOMRectReadOnly>()\n  const contentBoxSize = ref<ResizeObserverSize>()\n  const borderBoxSize = ref<ResizeObserverSize>()\n\n  const observer = new ResizeObserver((entries: ResizeObserverEntry[]) => {\n    callback?.(entries, observer)\n\n    if (!entries.length) return\n\n    contentRect.value = entries[0].contentRect\n    contentBoxSize.value = entries[0].contentBoxSize[0]\n    borderBoxSize.value = entries[0].borderBoxSize[0]\n  })\n\n  onBeforeUnmount(() => {\n    observer.disconnect()\n  })\n\n  watch(resizeRef, (newValue, oldValue) => {\n    if (oldValue) {\n      observer.unobserve(oldValue)\n      contentRect.value = undefined\n      contentBoxSize.value = undefined\n      borderBoxSize.value = undefined\n    }\n\n    if (newValue) observer.observe(newValue)\n  }, {\n    flush: 'post',\n  })\n\n  return {\n    resizeRef,\n    contentRect: readonly(contentRect),\n    contentBoxSize: readonly(contentBoxSize),\n    borderBoxSize: readonly(borderBoxSize),\n  }\n}\n"]}]}