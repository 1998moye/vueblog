{"remainingRequest":"D:\\IdeaWorkSpace\\springBootDemo2\\myblog-vue2\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-2!D:\\IdeaWorkSpace\\springBootDemo2\\myblog-vue2\\src\\views\\ViewBlogContent.vue?vue&type=style&index=0&id=12f5a648&scoped=true&lang=css","dependencies":[{"path":"D:\\IdeaWorkSpace\\springBootDemo2\\myblog-vue2\\src\\views\\ViewBlogContent.vue","mtime":1626609170845},{"path":"D:\\IdeaWorkSpace\\springBootDemo2\\myblog-vue2\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IdeaWorkSpace\\springBootDemo2\\myblog-vue2\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1624994109000},{"path":"D:\\IdeaWorkSpace\\springBootDemo2\\myblog-vue2\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\IdeaWorkSpace\\springBootDemo2\\myblog-vue2\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.vue.auto-import-quasar.js","mtime":499162500000},{"path":"D:\\IdeaWorkSpace\\springBootDemo2\\myblog-vue2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IdeaWorkSpace\\springBootDemo2\\myblog-vue2\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1624994108000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogICAgaW1new0KICAgICAgICB3aWR0aDogMjAwcHg7DQogICAgICAgIGhlaWdodDogMTAwcHg7DQogICAgfQ0K"},{"version":3,"sources":["D:\\IdeaWorkSpace\\springBootDemo2\\myblog-vue2\\src\\views\\ViewBlogContent.vue"],"names":[],"mappings":";IAkKI,CAAC,CAAC,CAAC;QACC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACjB","file":"D:/IdeaWorkSpace/springBootDemo2/myblog-vue2/src/views/ViewBlogContent.vue","sourceRoot":"","sourcesContent":["<template>\r\n    <a-back-top />\r\n    <Header></Header>\r\n    <a-layout class=\"layout\">\r\n        <a-layout-content style=\"padding: 10px 50px;\">\r\n\r\n            <a-row type=\"flex\" justify=\"center\" style=\"width: 70%;margin: 0 auto;\">\r\n                <a-col :span=\"24\" >\r\n                    <div :style=\"{ background: '#fff', padding: '32px', minHeight: '580px', width: 'auto', textAlign: 'left'}\" v-show=\"!showContent\">\r\n                        <a-skeleton active :paragraph=\"{rows: 5, width: 'auto'}\"/>\r\n                        <a-skeleton active :paragraph=\"{rows: 5, width: 'auto'}\"/>\r\n                    </div>\r\n                    <div :style=\"{ background: '#fff', padding: '32px', minHeight: '580px', width: 'auto', textAlign: 'left'}\" v-show=\"showContent\">\r\n                        <a-typography-title>{{blog.blog.title}}</a-typography-title>\r\n                        <div style=\"width:auto\">\r\n                            <a-card style=\"width: auto; background: ghostwhite;\" size=\"small\">\r\n\r\n                                <a-row>\r\n                                    <a-col :span=\"24\">\r\n\r\n                                        <a-space :size=\"30\">\r\n                                            <span>\r\n                                                发布于:{{blog.blog.created}}\r\n                                            </span>\r\n                                            <span>\r\n                                                作者:{{username}}\r\n                                            </span>\r\n                                        <span>\r\n                                            {{blog.blog.scans}}\r\n                                            <eye-outlined/>\r\n                                        </span>\r\n                                        <span>\r\n                                            <a :style=\"{color: isLike? 'blue':'gray'}\" @click=\"giveLike\">{{blog.blog.likes}}\r\n                                            <like-outlined /></a>\r\n                                        </span>\r\n                                            <span>\r\n                                                <router-link :to=\"{path: '/edit/' + blog.blog.id}\" v-show=\"userId === blog.blog.userId\"><edit-outlined key=\"edit\"/>编辑</router-link>\r\n                                            </span>\r\n                                        </a-space>\r\n                                    </a-col>\r\n                                </a-row>\r\n                            </a-card>\r\n                        </div>\r\n                        <a-divider />\r\n                        <div style=\"margin-top: 10px\">\r\n\r\n                                    <a-typography-paragraph strong=\"true\">\r\n                                        <blockquote>{{blog.blog.description}}</blockquote>\r\n                                    </a-typography-paragraph>\r\n\r\n\r\n                        </div>\r\n                        <a-divider />\r\n                        <div class=\"markdown-body\" v-html=\"blog.blog.content\" v-highlight>\r\n\r\n                        </div>\r\n                    </div>\r\n                </a-col>\r\n            </a-row>\r\n        </a-layout-content>\r\n    </a-layout>\r\n</template>\r\n\r\n<script>\r\n    import Header from '../components/Header'\r\n    import {EyeOutlined, LikeOutlined, EditOutlined} from '@ant-design/icons-vue'\r\n    import {defineComponent, ref, reactive, getCurrentInstance, onMounted, onBeforeMount} from 'vue'\r\n    import {message} from 'ant-design-vue'\r\n    // import MarkdownIt from 'markdown-it'\r\n    // import hljs from 'markdown-it-highlightjs'\r\n    import marked from 'marked'\r\n    import 'github-markdown-css'\r\n    export default defineComponent({\r\n        name: \"ViewBlogContent\",\r\n        components: {\r\n            Header,\r\n            EyeOutlined,\r\n            LikeOutlined,\r\n            EditOutlined,\r\n        },\r\n        setup(){\r\n            const {proxy} = getCurrentInstance()\r\n            let blog = reactive({blog:{}})\r\n            let username = ref('')\r\n            let isLike = ref(false)\r\n            let showContent = ref(false)\r\n            const blogId = proxy.$route.params.blogId\r\n            const userInfo = proxy.$store.getters.getUser\r\n            let userId = ref(0)\r\n            console.log(userId)\r\n            if(userInfo !== '' && userInfo !== null){\r\n                userId.value = userInfo.id\r\n            }\r\n            console.log(userId)\r\n\r\n            const getBlog = () => {\r\n                proxy.$axios.get('/detail/' + blogId).then(res => {\r\n                    const blogInfo = res.data.data\r\n                    blog.blog = blogInfo\r\n                    username.value = res.data.msg\r\n                    // console.log(localStorage.getItem('token'))\r\n                    if(localStorage.getItem('token') !== null && localStorage.getItem('token') !== ''){\r\n                        getLiked()\r\n                    }\r\n\r\n                    blog.blog.content = marked(blog.blog.content)\r\n                    showContent.value = true\r\n\r\n                })\r\n            }\r\n            const giveLike = () => {\r\n                        console.log(blog.blog.id)\r\n                        proxy.$axios.get('/like?userId=' + userId.value + '&blogId=' + blog.blog.id , {\r\n                            headers:{\r\n                                \"Authorization\": localStorage.getItem('token')\r\n                            }\r\n                        }).then(res => {\r\n                            if(res.data.data === 1){\r\n                                isLike.value = true\r\n                                blog.blog.likes += 1\r\n                            }else{\r\n                                isLike.value = false\r\n                                blog.blog.likes -= 1\r\n                            }\r\n                        }).catch(reason => {\r\n                            message.error('请先登录')\r\n                        })\r\n                }\r\n            const getLiked = () => {\r\n                    proxy.$axios.get('/getLike?userId=' + userId.value + '&blogId=' + blog.blog.id,\r\n                        {headers: {\r\n                                \"Authorization\": localStorage.getItem('token')\r\n                            }}\r\n                    ).then(res => {\r\n                        const resLiked = res.data.data\r\n                        console.log(resLiked)\r\n                        if(resLiked === 0){\r\n                            isLike.value = false\r\n                        }else{\r\n                            isLike.value = true\r\n                        }\r\n                    })\r\n            }\r\n\r\n\r\n            onMounted(() => {\r\n              getBlog()\r\n            })\r\n            return {\r\n                blog,\r\n                username,\r\n                isLike,\r\n                showContent,\r\n                giveLike,\r\n                userId,\r\n\r\n            }\r\n        }\r\n    })\r\n</script>\r\n\r\n<style scoped>\r\n    img{\r\n        width: 200px;\r\n        height: 100px;\r\n    }\r\n</style>"]}]}