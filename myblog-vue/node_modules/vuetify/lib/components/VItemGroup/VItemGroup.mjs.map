{"version":3,"sources":["../../../src/components/VItemGroup/VItemGroup.tsx"],"names":["makeGroupProps","useGroup","makeTagProps","makeThemeProps","useTheme","defineComponent","VItemGroupSymbol","Symbol","for","name","props","selectedClass","emits","value","setup","slots","themeClasses","isSelected","select","next","prev","selected","default"],"mappings":";AAAA;AACA,2B,CAEA;;SACSA,c,EAAgBC,Q;SAChBC,Y;SACAC,c,EAAgBC,Q,uCAEzB;;SACSC,e;AAET,OAAO,MAAMC,gBAAgB,GAAGC,MAAM,CAACC,GAAP,CAAW,sBAAX,CAAzB;AAEP,eAAeH,eAAe,CAAC;AAC7BI,EAAAA,IAAI,EAAE,YADuB;AAG7BC,EAAAA,KAAK,EAAE,EACL,GAAGV,cAAc,CAAC;AAChBW,MAAAA,aAAa,EAAE;AADC,KAAD,CADZ;AAIL,OAAGT,YAAY,EAJV;AAKL,OAAGC,cAAc;AALZ,GAHsB;AAW7BS,EAAAA,KAAK,EAAE;AACL,yBAAsBC,KAAD,IAAgB;AADhC,GAXsB;;AAe7BC,EAAAA,KAAK,CAAEJ,KAAF,EAAS;AAAEK,IAAAA;AAAF,GAAT,EAAoB;AACvB,UAAM;AAAEC,MAAAA;AAAF,QAAmBZ,QAAQ,CAACM,KAAD,CAAjC;AACA,UAAM;AAAEO,MAAAA,UAAF;AAAcC,MAAAA,MAAd;AAAsBC,MAAAA,IAAtB;AAA4BC,MAAAA,IAA5B;AAAkCC,MAAAA;AAAlC,QAA+CpB,QAAQ,CAACS,KAAD,EAAQJ,gBAAR,CAA7D;AAEA,WAAO;AAAA;;AAAA;AAAA,iBAEI,CACL,cADK,EAELU,YAAY,CAACH,KAFR;AAFJ;AAAA,0CAODE,KAAK,CAACO,OAPL,qBAOD,oBAAAP,KAAK,EAAW;AAChBE,UAAAA,UADgB;AAEhBC,UAAAA,MAFgB;AAGhBC,UAAAA,IAHgB;AAIhBC,UAAAA,IAJgB;AAKhBC,UAAAA,QAAQ,EAAEA,QAAQ,CAACR;AALH,SAAX,CAPJ;AAAA;AAAA,KAAP;AAgBD;;AAnC4B,CAAD,CAA9B","sourcesContent":["// Styles\nimport './VItemGroup.sass'\n\n// Composables\nimport { makeGroupProps, useGroup } from '@/composables/group'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, useTheme } from '@/composables/theme'\n\n// Utilities\nimport { defineComponent } from '@/util'\n\nexport const VItemGroupSymbol = Symbol.for('vuetify:v-item-group')\n\nexport default defineComponent({\n  name: 'VItemGroup',\n\n  props: {\n    ...makeGroupProps({\n      selectedClass: 'v-item--selected',\n    }),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n  },\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const { themeClasses } = useTheme(props)\n    const { isSelected, select, next, prev, selected } = useGroup(props, VItemGroupSymbol)\n\n    return () => (\n      <props.tag\n        class={[\n          'v-item-group',\n          themeClasses.value,\n        ]}\n      >\n        { slots.default?.({\n          isSelected,\n          select,\n          next,\n          prev,\n          selected: selected.value,\n        }) }\n      </props.tag>\n    )\n  },\n})\n"],"file":"VItemGroup.mjs"}