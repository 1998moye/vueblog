{"version":3,"sources":["../../../src/components/VMessages/VMessages.ts"],"names":["Colorable","Themeable","mixins","getSlot","extend","name","props","value","type","Array","default","methods","genChildren","$createElement","staticClass","attrs","tag","map","genMessage","message","key","render","h","setTextColor","color","class","themeClasses"],"mappings":"AAAA;;AACA;AAEA;AACA,0B,CAEA;;OACOA,S;OACAC,S,0CAEP;;OAGOC,M,+BAEP;;SACSC,O;AAET;;AACA,eAAeD,MAAM,CAACF,SAAD,EAAYC,SAAZ,CAAN,CAA6BG,MAA7B,CAAoC;AACjDC,EAAAA,IAAI,EAAE,YAD2C;AAGjDC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAEC,KADD;AAELC,MAAAA,OAAO,EAAE,MAAO;AAFX;AADF,GAH0C;AAUjDC,EAAAA,OAAO,EAAE;AACPC,IAAAA,WAAW,GAAI;AACb,aAAO,KAAKC,cAAL,CAAoB,kBAApB,EAAwC;AAC7CC,QAAAA,WAAW,EAAE,qBADgC;AAE7CC,QAAAA,KAAK,EAAE;AACLV,UAAAA,IAAI,EAAE,oBADD;AAELW,UAAAA,GAAG,EAAE;AAFA;AAFsC,OAAxC,EAMJ,KAAKT,KAAL,CAAWU,GAAX,CAAe,KAAKC,UAApB,CANI,CAAP;AAOD,KATM;;AAUPA,IAAAA,UAAU,CAAEC,OAAF,EAAmBC,GAAnB,EAAgC;AACxC,aAAO,KAAKP,cAAL,CAAoB,KAApB,EAA2B;AAChCC,QAAAA,WAAW,EAAE,qBADmB;AAEhCM,QAAAA;AAFgC,OAA3B,EAGJjB,OAAO,CAAC,IAAD,EAAO,SAAP,EAAkB;AAAEgB,QAAAA,OAAF;AAAWC,QAAAA;AAAX,OAAlB,CAAP,IAA8C,CAACD,OAAD,CAH1C,CAAP;AAID;;AAfM,GAVwC;;AA4BjDE,EAAAA,MAAM,CAAEC,CAAF,EAAY;AAChB,WAAOA,CAAC,CAAC,KAAD,EAAQ,KAAKC,YAAL,CAAkB,KAAKC,KAAvB,EAA8B;AAC5CV,MAAAA,WAAW,EAAE,YAD+B;AAE5CW,MAAAA,KAAK,EAAE,KAAKC;AAFgC,KAA9B,CAAR,EAGJ,CAAC,KAAKd,WAAL,EAAD,CAHI,CAAR;AAID;;AAjCgD,CAApC,CAAf","sourcesContent":["// @ts-nocheck\n/* eslint-disable */\n\n// Styles\nimport './VMessages.sass'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\n\n// Types\nimport { VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport mixins from '../../util/mixins'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\n\n/* @vue/component */\nexport default mixins(Colorable, Themeable).extend({\n  name: 'v-messages',\n\n  props: {\n    value: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<string[]>,\n  },\n\n  methods: {\n    genChildren () {\n      return this.$createElement('transition-group', {\n        staticClass: 'v-messages__wrapper',\n        attrs: {\n          name: 'message-transition',\n          tag: 'div',\n        },\n      }, this.value.map(this.genMessage))\n    },\n    genMessage (message: string, key: number) {\n      return this.$createElement('div', {\n        staticClass: 'v-messages__message',\n        key,\n      }, getSlot(this, 'default', { message, key }) || [message])\n    },\n  },\n\n  render (h): VNode {\n    return h('div', this.setTextColor(this.color, {\n      staticClass: 'v-messages',\n      class: this.themeClasses,\n    }), [this.genChildren()])\n  },\n})\n"],"file":"VMessages.mjs"}