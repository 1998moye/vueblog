{"version":3,"sources":["../../../src/components/VIcon/VIcon.tsx"],"names":["makeSizeProps","useSize","makeTagProps","useIcon","useTextColor","computed","toRef","convertToUnit","defineComponent","flattenFragments","name","props","color","String","left","Boolean","right","icon","type","Object","tag","setup","slots","slotIcon","default","slot","filter","node","children","iconData","sizeClasses","textColorClasses","textColorStyles","value","fontSize","size","width","height","undefined"],"mappings":";AAAA;AACA,sB,CAEA;;SACSA,a,EAAeC,O;SACfC,Y;SACAC,O;SACAC,Y,uCAET;;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,KAAhC;SACSC,a,EAAeC,e,EAAiBC,gB,gCAEzC;;AAIA,eAAeD,eAAe,CAAC;AAC7BE,EAAAA,IAAI,EAAE,OADuB;AAG7BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAEC,MADF;AAELC,IAAAA,IAAI,EAAEC,OAFD;AAGLC,IAAAA,KAAK,EAAED,OAHF;AAILE,IAAAA,IAAI,EAAE;AACJC,MAAAA,IAAI,EAAE,CAACL,MAAD,EAASM,MAAT;AADF,KAJD;AAOL,OAAGnB,aAAa,EAPX;AAQL,OAAGE,YAAY,CAAC;AAAEkB,MAAAA,GAAG,EAAE;AAAP,KAAD;AARV,GAHsB;;AAc7BC,EAAAA,KAAK,CAAEV,KAAF,EAAS;AAAEW,IAAAA;AAAF,GAAT,EAAoB;AACvB,QAAIC,QAAJ;;AACA,QAAID,KAAK,CAACE,OAAV,EAAmB;AACjBD,MAAAA,QAAQ,GAAGlB,QAAQ,CAAC,MAAM;AAAA;;AACxB,cAAMoB,IAAI,qBAAGH,KAAK,CAACE,OAAT,qBAAG,oBAAAF,KAAK,CAAlB;AACA,YAAI,CAACG,IAAL,EAAW;AAEX,wCAAOhB,gBAAgB,CAACgB,IAAD,CAAhB,CAAuBC,MAAvB,CAA8BC,IAAI,IACvCA,IAAI,CAACC,QAAL,IAAiB,OAAOD,IAAI,CAACC,QAAZ,KAAyB,QADrC,EAEL,CAFK,CAAP,qBAAO,sBAEDA,QAFN;AAGD,OAPkB,CAAnB;AAQD;;AAED,UAAM;AAAEC,MAAAA;AAAF,QAAe1B,OAAO,CAACoB,QAAQ,IAAIZ,KAAb,CAA5B;AACA,UAAM;AAAEmB,MAAAA;AAAF,QAAkB7B,OAAO,CAACU,KAAD,EAAQ,QAAR,CAA/B;AACA,UAAM;AAAEoB,MAAAA,gBAAF;AAAoBC,MAAAA;AAApB,QAAwC5B,YAAY,CAACE,KAAK,CAACK,KAAD,EAAQ,OAAR,CAAN,CAA1D;AAEA,WAAO,MAAM;AACX;AAAA,eAEUA,KAAK,CAACS,GAFhB;AAAA,gBAGWS,QAAQ,CAACI,KAAT,CAAehB,IAH1B;AAAA,iBAIW,CACL,QADK,EAEL,aAFK,EAGLa,WAAW,CAACG,KAHP,EAILF,gBAAgB,CAACE,KAJZ,EAKL;AACE,0BAAgBtB,KAAK,CAACG,IADxB;AAEE,2BAAiBH,KAAK,CAACK;AAFzB,SALK,CAJX;AAAA,iBAcW,CACL,CAACc,WAAW,CAACG,KAAb,GAAsB;AACpBC,UAAAA,QAAQ,EAAE3B,aAAa,CAACI,KAAK,CAACwB,IAAP,CADH;AAEpBC,UAAAA,KAAK,EAAE7B,aAAa,CAACI,KAAK,CAACwB,IAAP,CAFA;AAGpBE,UAAAA,MAAM,EAAE9B,aAAa,CAACI,KAAK,CAACwB,IAAP;AAHD,SAAtB,GAIKG,SALA,EAMLN,eAAe,CAACC,KANX,CAdX;AAAA,uBAsBgB;AAtBhB;AAyBD,KA1BD;AA2BD;;AA1D4B,CAAD,CAA9B","sourcesContent":["// Styles\nimport './VIcon.sass'\n\n// Composables\nimport { makeSizeProps, useSize } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\nimport { useIcon } from '@/composables/icons'\nimport { useTextColor } from '@/composables/color'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { convertToUnit, defineComponent, flattenFragments } from '@/util'\n\n// Types\nimport type { IconValue } from '@/composables/icons'\nimport type { ComputedRef, PropType } from 'vue'\n\nexport default defineComponent({\n  name: 'VIcon',\n\n  props: {\n    color: String,\n    left: Boolean,\n    right: Boolean,\n    icon: {\n      type: [String, Object] as PropType<IconValue>,\n    },\n    ...makeSizeProps(),\n    ...makeTagProps({ tag: 'i' }),\n  },\n\n  setup (props, { slots }) {\n    let slotIcon: ComputedRef<string | undefined> | undefined\n    if (slots.default) {\n      slotIcon = computed(() => {\n        const slot = slots.default?.()\n        if (!slot) return\n\n        return flattenFragments(slot).filter(node =>\n          node.children && typeof node.children === 'string'\n        )[0]?.children as string\n      })\n    }\n\n    const { iconData } = useIcon(slotIcon || props)\n    const { sizeClasses } = useSize(props, 'v-icon')\n    const { textColorClasses, textColorStyles } = useTextColor(toRef(props, 'color'))\n\n    return () => {\n      return (\n        <iconData.value.component\n          tag={ props.tag }\n          icon={ iconData.value.icon }\n          class={[\n            'v-icon',\n            'notranslate',\n            sizeClasses.value,\n            textColorClasses.value,\n            {\n              'v-icon--left': props.left,\n              'v-icon--right': props.right,\n            },\n          ]}\n          style={[\n            !sizeClasses.value ? ({\n              fontSize: convertToUnit(props.size),\n              width: convertToUnit(props.size),\n              height: convertToUnit(props.size),\n            }) : undefined,\n            textColorStyles.value,\n          ]}\n          aria-hidden=\"true\"\n        />\n      )\n    }\n  },\n})\n"],"file":"VIcon.mjs"}