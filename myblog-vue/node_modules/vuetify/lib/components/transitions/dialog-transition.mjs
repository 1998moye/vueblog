import { createVNode as _createVNode, mergeProps as _mergeProps, resolveDirective as _resolveDirective } from "vue";
import { Transition } from 'vue';
import { acceleratedEasing, deceleratedEasing, defineComponent } from "../../util/index.mjs";
export default defineComponent({
  name: 'VDialogTransition',
  props: {
    target: Object
  },

  setup(props, {
    slots
  }) {
    const functions = {
      onEnter(el, done) {
        const {
          x,
          y
        } = getDimensions(props.target, el);
        const animation = el.animate([{
          transform: `translate(${x}px, ${y}px) scale(0.1)`,
          opacity: 0
        }, {
          transform: ''
        }], {
          duration: 225,
          easing: deceleratedEasing
        });
        animation.finished.then(() => done());
      },

      onLeave(el, done) {
        const {
          x,
          y
        } = getDimensions(props.target, el);
        const animation = el.animate([{
          transform: ''
        }, {
          transform: `translate(${x}px, ${y}px) scale(0.1)`,
          opacity: 0
        }], {
          duration: 125,
          easing: acceleratedEasing
        });
        animation.finished.then(() => done());
      }

    };
    return () => {
      return props.target ? _createVNode(Transition, _mergeProps({
        "name": "dialog-transition"
      }, functions, {
        "css": false
      }), slots, 16) : _createVNode(Transition, {
        "name": "dialog-transition"
      }, slots);
    };
  }

});

function getDimensions(target, el) {
  const initialDisplay = el.style.display;
  const initialTransform = el.style.transform;
  el.style.transition = 'none';
  el.style.display = '';
  el.style.transform = 'none';
  const targetBox = target.getBoundingClientRect();
  const elBox = el.getBoundingClientRect();
  const x = targetBox.width / 2 + targetBox.left - (elBox.width / 2 + elBox.left);
  const y = targetBox.height / 2 + targetBox.top - (elBox.height / 2 + elBox.top);
  el.style.display = initialDisplay;
  el.style.transform = initialTransform;
  return {
    x,
    y
  };
}
//# sourceMappingURL=dialog-transition.mjs.map