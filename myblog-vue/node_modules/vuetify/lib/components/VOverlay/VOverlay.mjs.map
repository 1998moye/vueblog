{"version":3,"sources":["../../../src/components/VOverlay/VOverlay.tsx"],"names":["makeThemeProps","useTheme","makeTransitionProps","MaybeTransition","useBackButton","useBackgroundColor","useProxiedModel","useRtl","useTeleport","ClickOutside","convertToUnit","defineComponent","getScrollParent","getScrollParents","standardEasing","useRender","computed","nextTick","ref","Teleport","toRef","Transition","watch","watchEffect","useBooted","isActive","eager","isBooted","value","positionStrategies","scrollStrategies","Scrim","props","modelValue","color","rest","backgroundColorClasses","backgroundColorStyles","CloseScrollStrategy","constructor","content","enable","scrollElements","document","forEach","el","addEventListener","onScroll","bind","passive","disable","removeEventListener","BlockScrollStrategy","scrollbarWidth","window","innerWidth","documentElement","offsetWidth","style","setProperty","i","initialOverflow","overflowY","removeProperty","name","directives","inheritAttrs","absolute","Boolean","attach","type","String","Object","default","noClickAnimation","origin","persistent","positionStrategy","validator","val","includes","scrim","scrollStrategy","emits","e","setup","slots","attrs","emit","teleportTarget","themeClasses","rtlClasses","scrimColor","onClickOutside","animateClick","closeConditional","activatorElement","onActivatorClick","currentTarget","target","onKeydown","key","next","focus","root","top","scrollParent","scrollingElement","scrollTop","animate","transformOrigin","transform","duration","easing","onAfterLeave","activator","onClick","undefined","transition","handler"],"mappings":";;;;AAAA;AACA,yB,CAEA;;SACSA,c,EAAgBC,Q;SAChBC,mB,EAAqBC,e;SACrBC,a;SACAC,kB;SACAC,e;SACAC,M;SACAC,W,0CAET;;SACSC,Y,oDAET;;SACSC,a,EAAeC,e,EAAiBC,e,EAAiBC,gB,EAAkBC,c,EAAgBC,S;AAC5F,SACEC,QADF,EAEEC,QAFF,EAGEC,GAHF,EAIEC,QAJF,EAKEC,KALF,EAMEC,UANF,EAOEC,KAPF,EAQEC,WARF,QASO,KATP,C,CAWA;;AAIA,SAASC,SAAT,CAAoBC,QAApB,EAA4CC,KAA5C,EAAiE;AAC/D,QAAMC,QAAQ,GAAGT,GAAG,CAACQ,KAAK,CAACE,KAAP,CAApB;AAEAL,EAAAA,WAAW,CAAC,MAAM;AAChB,QAAIG,KAAK,CAACE,KAAN,IAAeH,QAAQ,CAACG,KAA5B,EAAmC;AACjCD,MAAAA,QAAQ,CAACC,KAAT,GAAiB,IAAjB;AACD;AACF,GAJU,CAAX;AAMA,SAAO;AAAED,IAAAA;AAAF,GAAP;AACD;;AAED,MAAME,kBAAkB,GAAG,CACzB,QADyB,EACf;AACV,WAFyB,EAEZ;AACb,UAHyB,CAGb;AAHa,CAA3B;AAMA,MAAMC,gBAAgB,GAAG,CACvB,OADuB,EAEvB,OAFuB,EAGvB,YAHuB,CAAzB;;AAWA,SAASC,KAAT,CAAgBC,KAAhB,EAAmC;AACjC,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,KAAd;AAAqB,OAAGC;AAAxB,MAAiCH,KAAvC;AACA;AAAA,YACmB,iBADnB;AAAA;AAAA;AAAA,oBAEMA,KAAK,CAACC,UAAN;AAAA,eAES,CACL,kBADK,EAELD,KAAK,CAACE,KAAN,CAAYE,sBAAZ,CAAmCR,KAF9B,CAFT;AAAA,eAMUI,KAAK,CAACE,KAAN,CAAYG,qBAAZ,CAAkCT;AAN5C,OAOOO,IAPP,YAFN;AAAA;AAcD;;AAOD,MAAMG,mBAAN,CAAoD;AAKlDC,EAAAA,WAAW,CAAE;AAAEC,IAAAA,OAAF;AAAWf,IAAAA;AAAX,GAAF,EAA4F;AAAA,4CAH/D,EAG+D;;AACrG,SAAKe,OAAL,GAAeA,OAAf;AACA,SAAKf,QAAL,GAAgBA,QAAhB;AACD;;AAEDgB,EAAAA,MAAM,GAAI;AACR,SAAKC,cAAL,GAAsB,CAACC,QAAD,EAAW,GAAG9B,gBAAgB,CAAC,KAAK2B,OAAL,CAAaZ,KAAd,CAA9B,CAAtB;AAEA,SAAKc,cAAL,CAAoBE,OAApB,CAA4BC,EAAE,IAAI;AAChCA,MAAAA,EAAE,CAACC,gBAAH,CAAoB,QAApB,EAA8B,KAAKC,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAA9B,EAAwD;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAxD;AACD,KAFD;AAGD;;AAEDC,EAAAA,OAAO,GAAI;AACT,SAAKR,cAAL,CAAoBE,OAApB,CAA4BC,EAAE,IAAI;AAChCA,MAAAA,EAAE,CAACM,mBAAH,CAAuB,QAAvB,EAAiC,KAAKJ,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAjC;AACD,KAFD;AAGD;;AAEOD,EAAAA,QAAQ,GAAI;AAClB,SAAKtB,QAAL,CAAcG,KAAd,GAAsB,KAAtB;AACD;;AA1BiD;;AA6BpD,MAAMwB,mBAAN,CAAoD;AAKlDb,EAAAA,WAAW,CAAE;AAAEC,IAAAA;AAAF,GAAF,EAA0D;AAAA,6CAJjC,EAIiC;;AAAA,4CAH7B,EAG6B;;AACnE,SAAKA,OAAL,GAAeA,OAAf;AACD;;AAEDC,EAAAA,MAAM,GAAI;AACR,SAAKC,cAAL,GAAsB7B,gBAAgB,CAAC,KAAK2B,OAAL,CAAaZ,KAAd,CAAtC;AACA,UAAMyB,cAAc,GAAGC,MAAM,CAACC,UAAP,GAAoBZ,QAAQ,CAACa,eAAT,CAAyBC,WAApE;AAEAd,IAAAA,QAAQ,CAACa,eAAT,CAAyBE,KAAzB,CAA+BC,WAA/B,CAA2C,sBAA3C,EAAmEjD,aAAa,CAAC2C,cAAD,CAAhF;AAEA,SAAKX,cAAL,CAAoBE,OAApB,CAA4B,CAACC,EAAD,EAAKe,CAAL,KAAW;AACrC,WAAKC,eAAL,CAAqBD,CAArB,IAA0Bf,EAAE,CAACa,KAAH,CAASI,SAAnC;AACAjB,MAAAA,EAAE,CAACa,KAAH,CAASI,SAAT,GAAqB,QAArB;AACAjB,MAAAA,EAAE,CAACa,KAAH,CAASC,WAAT,CAAqB,sBAArB,EAA6CjD,aAAa,CAAC2C,cAAD,CAA1D;AACD,KAJD;AAKD;;AAEDH,EAAAA,OAAO,GAAI;AACT,SAAKR,cAAL,CAAoBE,OAApB,CAA4B,CAACC,EAAD,EAAKe,CAAL,KAAW;AACrCf,MAAAA,EAAE,CAACa,KAAH,CAASI,SAAT,GAAqB,KAAKD,eAAL,CAAqBD,CAArB,CAArB;AACAf,MAAAA,EAAE,CAACa,KAAH,CAASK,cAAT,CAAwB,sBAAxB;AACD,KAHD;AAIApB,IAAAA,QAAQ,CAACa,eAAT,CAAyBE,KAAzB,CAA+BK,cAA/B,CAA8C,sBAA9C;AACD;;AA5BiD;;AA+BpD,eAAepD,eAAe,CAAC;AAC7BqD,EAAAA,IAAI,EAAE,UADuB;AAG7BC,EAAAA,UAAU,EAAE;AAAExD,IAAAA;AAAF,GAHiB;AAK7ByD,EAAAA,YAAY,EAAE,KALe;AAO7BlC,EAAAA,KAAK,EAAE;AACLmC,IAAAA,QAAQ,EAAEC,OADL;AAELC,IAAAA,MAAM,EAAE;AACNC,MAAAA,IAAI,EAAE,CAACF,OAAD,EAAUG,MAAV,EAAkBC,MAAlB,CADA;AAENC,MAAAA,OAAO,EAAE;AAFH,KAFH;AAML/C,IAAAA,KAAK,EAAE0C,OANF;AAOLM,IAAAA,gBAAgB,EAAEN,OAPb;AAQLnC,IAAAA,UAAU,EAAEmC,OARP;AASLO,IAAAA,MAAM,EAAE,CAACJ,MAAD,EAASC,MAAT,CATH;AAULI,IAAAA,UAAU,EAAER,OAVP;AAWLS,IAAAA,gBAAgB,EAAE;AAChBP,MAAAA,IAAI,EAAEC,MADU;AAEhBE,MAAAA,OAAO,EAAE,QAFO;AAGhBK,MAAAA,SAAS,EAAGC,GAAD,IAAclD,kBAAkB,CAACmD,QAAnB,CAA4BD,GAA5B;AAHT,KAXb;AAgBLE,IAAAA,KAAK,EAAE;AACLX,MAAAA,IAAI,EAAE,CAACC,MAAD,EAASH,OAAT,CADD;AAELK,MAAAA,OAAO,EAAE;AAFJ,KAhBF;AAoBLS,IAAAA,cAAc,EAAE;AACdZ,MAAAA,IAAI,EAAEC,MADQ;AAEdE,MAAAA,OAAO,EAAE,OAFK;AAGdK,MAAAA,SAAS,EAAGC,GAAD,IAAcjD,gBAAgB,CAACkD,QAAjB,CAA0BD,GAA1B;AAHX,KApBX;AAyBL,OAAG/E,cAAc,EAzBZ;AA0BL,OAAGE,mBAAmB;AA1BjB,GAPsB;AAoC7BiF,EAAAA,KAAK,EAAE;AACL,qBAAkBC,CAAD,IAAmB,IAD/B;AAEL,yBAAsBxD,KAAD,IAAoB;AAFpC,GApCsB;;AAyC7ByD,EAAAA,KAAK,CAAErD,KAAF,EAAS;AAAEsD,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA;AAAhB,GAAT,EAAiC;AACpC,UAAM/D,QAAQ,GAAGnB,eAAe,CAAC0B,KAAD,EAAQ,YAAR,CAAhC;AAEA,UAAM;AAAEyD,MAAAA;AAAF,QAAqBjF,WAAW,CAACY,KAAK,CAACY,KAAD,EAAQ,QAAR,CAAN,CAAtC;AACA,UAAM;AAAE0D,MAAAA;AAAF,QAAmBzF,QAAQ,CAAC+B,KAAD,CAAjC;AACA,UAAM;AAAE2D,MAAAA;AAAF,QAAiBpF,MAAM,EAA7B;AACA,UAAM;AAAEoB,MAAAA;AAAF,QAAeH,SAAS,CAACC,QAAD,EAAWL,KAAK,CAACY,KAAD,EAAQ,OAAR,CAAhB,CAA9B;AACA,UAAM4D,UAAU,GAAGvF,kBAAkB,CAACW,QAAQ,CAAC,MAAM;AACnD,aAAO,OAAOgB,KAAK,CAACiD,KAAb,KAAuB,QAAvB,GAAkCjD,KAAK,CAACiD,KAAxC,GAAgD,IAAvD;AACD,KAF6C,CAAT,CAArC;;AAIA,aAASY,cAAT,CAAyBT,CAAzB,EAAwC;AACtCI,MAAAA,IAAI,CAAC,eAAD,EAAkBJ,CAAlB,CAAJ;AAEA,UAAI,CAACpD,KAAK,CAAC4C,UAAX,EAAuBnD,QAAQ,CAACG,KAAT,GAAiB,KAAjB,CAAvB,KACKkE,YAAY;AAClB;;AAED,aAASC,gBAAT,GAA6B;AAC3B,aAAOtE,QAAQ,CAACG,KAAhB;AACD;;AAED,UAAMoE,gBAAgB,GAAG9E,GAAG,EAA5B;;AACA,aAAS+E,gBAAT,CAA2Bb,CAA3B,EAA0C;AACxCY,MAAAA,gBAAgB,CAACpE,KAAjB,GAA0BwD,CAAC,CAACc,aAAF,IAAmBd,CAAC,CAACe,MAA/C;AACA1E,MAAAA,QAAQ,CAACG,KAAT,GAAiB,CAACH,QAAQ,CAACG,KAA3B;AACD;;AAED,aAASwE,SAAT,CAAoBhB,CAApB,EAAsC;AACpC,UAAIA,CAAC,CAACiB,GAAF,KAAU,QAAd,EAAwB;AACtB,YAAI,CAACrE,KAAK,CAAC4C,UAAX,EAAuB;AACrBnD,UAAAA,QAAQ,CAACG,KAAT,GAAiB,KAAjB;AACD,SAFD,MAEOkE,YAAY;AACpB;AACF;;AAED1F,IAAAA,aAAa,CAACkG,IAAI,IAAI;AACpBA,MAAAA,IAAI,CAAC,CAAC7E,QAAQ,CAACG,KAAX,CAAJ;AAEA,UAAI,CAACI,KAAK,CAAC4C,UAAX,EAAuBnD,QAAQ,CAACG,KAAT,GAAiB,KAAjB,CAAvB,KACKkE,YAAY;AAClB,KALY,CAAb;AAOA,UAAMtD,OAAO,GAAGtB,GAAG,EAAnB;AACAI,IAAAA,KAAK,CAACG,QAAD,EAAWsD,GAAG,IAAI;AACrB9D,MAAAA,QAAQ,CAAC,MAAM;AACb,YAAI8D,GAAJ,EAAS;AAAA;;AACP,4BAAAvC,OAAO,CAACZ,KAAR,oCAAe2E,KAAf;AACD,SAFD,MAEO;AAAA;;AACL,mCAAAP,gBAAgB,CAACpE,KAAjB,2CAAwB2E,KAAxB;AACD;AACF,OANO,CAAR;AAOD,KARI,CAAL;AAUA,UAAMC,IAAI,GAAGtF,GAAG,EAAhB;AACA,UAAMuF,GAAG,GAAGvF,GAAG,EAAf;AACAI,IAAAA,KAAK,CAAC,MAAMG,QAAQ,CAACG,KAAT,IAAkBI,KAAK,CAACmC,QAAxB,IAAoCsB,cAAc,CAAC7D,KAAf,IAAwB,IAAnE,EAAyEmD,GAAG,IAAI;AACnF,UAAIA,GAAJ,EAAS;AACP,cAAM2B,YAAY,GAAG9F,eAAe,CAAC4F,IAAI,CAAC5E,KAAN,CAApC;;AACA,YAAI8E,YAAY,IAAIA,YAAY,KAAK/D,QAAQ,CAACgE,gBAA9C,EAAgE;AAC9DF,UAAAA,GAAG,CAAC7E,KAAJ,GAAY8E,YAAY,CAACE,SAAzB;AACD;AACF;AACF,KAPI,CAAL,CAxDoC,CAiEpC;;AACA,aAASd,YAAT,GAAyB;AAAA;;AACvB,UAAI9D,KAAK,CAAC0C,gBAAV,EAA4B;AAE5B,yBAAAlC,OAAO,CAACZ,KAAR,qCAAeiF,OAAf,CAAuB,CACrB;AAAEC,QAAAA,eAAe,EAAE;AAAnB,OADqB,EAErB;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAFqB,EAGrB;AAAED,QAAAA,eAAe,EAAE;AAAnB,OAHqB,CAAvB,EAIG;AACDE,QAAAA,QAAQ,EAAE,GADT;AAEDC,QAAAA,MAAM,EAAEnG;AAFP,OAJH;AAQD;;AAED,aAASoG,YAAT,GAAyB;AACvB,UAAI,CAAClF,KAAK,CAACN,KAAX,EAAkBC,QAAQ,CAACC,KAAT,GAAiB,KAAjB;AACnB;;AAED,UAAMsD,cAAc,GAClBlD,KAAK,CAACkD,cAAN,KAAyB,OAAzB,GAAmC,IAAI5C,mBAAJ,CAAwB;AAAEE,MAAAA,OAAF;AAAWf,MAAAA;AAAX,KAAxB,CAAnC,GACEO,KAAK,CAACkD,cAAN,KAAyB,OAAzB,GAAmC,IAAI9B,mBAAJ,CAAwB;AAAEZ,MAAAA;AAAF,KAAxB,CAAnC,GACA,IAHJ,CAnFoC,CAwFpC;;AACA,QAAI0C,cAAJ,EAAoB;AAClB5D,MAAAA,KAAK,CAACG,QAAD,EAAWsD,GAAG,IAAI;AACrB9D,QAAAA,QAAQ,CAAC,MAAM;AACb8D,UAAAA,GAAG,GAAGG,cAAc,CAACzC,MAAf,EAAH,GAA6ByC,cAAc,CAAChC,OAAf,EAAhC;AACD,SAFO,CAAR;AAGD,OAJI,CAAL;AAKD;;AAEDnC,IAAAA,SAAS,CAAC;AAAA;;AAAA,gEAEJuE,KAAK,CAAC6B,SAFF,qBAEJ,sBAAA7B,KAAK,EAAa;AAClB7D,QAAAA,QAAQ,EAAEA,QAAQ,CAACG,KADD;AAElBI,QAAAA,KAAK,EAAE;AACLC,UAAAA,UAAU,EAAER,QAAQ,CAACG,KADhB;AAEL,iCAAwBmD,GAAD,IAAkBtD,QAAQ,CAACG,KAAT,GAAiBmD,GAFrD;AAGLqC,UAAAA,OAAO,EAAEnB;AAHJ;AAFW,OAAb,CAFD;AAAA,oBAWO,CAACR,cAAc,CAAC7D,KAXvB;AAAA,eAYE4E,IAZF;AAAA,cAaCf,cAAc,CAAC7D;AAbhB;AAAA,wBAeFD,QAAQ,CAACC,KAAT;AAAA,mBAES,CACL,WADK,EAEL;AACE,mCAAuBI,KAAK,CAACmC,QAD/B;AAEE,iCAAqB1C,QAAQ,CAACG;AAFhC,WAFK,EAML8D,YAAY,CAAC9D,KANR,EAOL+D,UAAU,CAAC/D,KAPN,CAFT;AAAA,mBAWU6E,GAAG,CAAC7E,KAAJ,IAAa,IAAb,GAAqB,QAAOlB,aAAa,CAAC+F,GAAG,CAAC7E,KAAL,CAAY,EAArD,GAAyDyF;AAXnE,WAYM9B,KAZN;AAAA,mBAeYK,UAfZ;AAAA,wBAgBiBnE,QAAQ,CAACG,KAAT,IAAkB,CAAC,CAACI,KAAK,CAACiD;AAhB3C;AAAA;AAAA,0BAoBmBiC,YApBnB;AAAA;AAAA,wBAsBiBlF,KAAK,CAACsF;AAtBvB;AAAA;AAAA,mBAyBY9E,OAzBZ;AAAA,qBA4BY,oBA5BZ;AAAA,wBA6BiB,CAAC,CA7BlB;AAAA,yBA8BkB4D;AA9BlB,gCAgCQd,KAAK,CAACb,OAhCd,qBAgCQ,oBAAAa,KAAK,EAAW;AAAE7D,YAAAA;AAAF,WAAX,CAhCb,6CA0BeA,QAAQ,CAACG,KA1BxB,wCA2BuB;AAAE2F,YAAAA,OAAO,EAAE1B,cAAX;AAA2BE,YAAAA;AAA3B,WA3BvB;AAAA,0EAfE;AAAA;AAAA,KAAD,CAAT;AAwDA,WAAO;AACLD,MAAAA,YADK;AAELtD,MAAAA;AAFK,KAAP;AAID;;AAtM4B,CAAD,CAA9B","sourcesContent":["// Styles\nimport './VOverlay.sass'\n\n// Composables\nimport { makeThemeProps, useTheme } from '@/composables/theme'\nimport { makeTransitionProps, MaybeTransition } from '@/composables/transition'\nimport { useBackButton } from '@/composables/router'\nimport { useBackgroundColor } from '@/composables/color'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useRtl } from '@/composables/rtl'\nimport { useTeleport } from '@/composables/teleport'\n\n// Directives\nimport { ClickOutside } from '@/directives/click-outside'\n\n// Utilities\nimport { convertToUnit, defineComponent, getScrollParent, getScrollParents, standardEasing, useRender } from '@/util'\nimport {\n  computed,\n  nextTick,\n  ref,\n  Teleport,\n  toRef,\n  Transition,\n  watch,\n  watchEffect,\n} from 'vue'\n\n// Types\nimport type { BackgroundColorData } from '@/composables/color'\nimport type { Prop, PropType, Ref } from 'vue'\n\nfunction useBooted (isActive: Ref<boolean>, eager: Ref<boolean>) {\n  const isBooted = ref(eager.value)\n\n  watchEffect(() => {\n    if (eager.value || isActive.value) {\n      isBooted.value = true\n    }\n  })\n\n  return { isBooted }\n}\n\nconst positionStrategies = [\n  'global', // specific viewport position, usually centered\n  'connected', // connected to a certain element\n  'flexible', // connected to an element with the ability to overflow or shift if it doesn't fit in the screen\n] as const\n\nconst scrollStrategies = [\n  'close',\n  'block',\n  'reposition',\n] as const\n\ninterface ScrimProps {\n  [key: string]: unknown\n  modelValue: boolean\n  color: BackgroundColorData\n}\nfunction Scrim (props: ScrimProps) {\n  const { modelValue, color, ...rest } = props\n  return (\n    <Transition name=\"fade-transition\" appear>\n      { props.modelValue && (\n        <div\n          class={[\n            'v-overlay__scrim',\n            props.color.backgroundColorClasses.value,\n          ]}\n          style={ props.color.backgroundColorStyles.value }\n          { ...rest }\n        />\n      )}\n    </Transition>\n  )\n}\n\ninterface ScrollStrategy {\n  enable (): void\n  disable (): void\n}\n\nclass CloseScrollStrategy implements ScrollStrategy {\n  private content: Ref<HTMLElement | undefined>\n  private scrollElements: EventTarget[] = []\n  private isActive: Ref<boolean>\n\n  constructor ({ content, isActive }: { content: Ref<HTMLElement | undefined>, isActive: Ref<boolean> }) {\n    this.content = content\n    this.isActive = isActive\n  }\n\n  enable () {\n    this.scrollElements = [document, ...getScrollParents(this.content.value)]\n\n    this.scrollElements.forEach(el => {\n      el.addEventListener('scroll', this.onScroll.bind(this), { passive: true })\n    })\n  }\n\n  disable () {\n    this.scrollElements.forEach(el => {\n      el.removeEventListener('scroll', this.onScroll.bind(this))\n    })\n  }\n\n  private onScroll () {\n    this.isActive.value = false\n  }\n}\n\nclass BlockScrollStrategy implements ScrollStrategy {\n  private initialOverflow: string[] = []\n  private scrollElements: HTMLElement[] = []\n  private content: Ref<HTMLElement | undefined>\n\n  constructor ({ content }: { content: Ref<HTMLElement | undefined> }) {\n    this.content = content\n  }\n\n  enable () {\n    this.scrollElements = getScrollParents(this.content.value)\n    const scrollbarWidth = window.innerWidth - document.documentElement.offsetWidth\n\n    document.documentElement.style.setProperty('--v-scrollbar-offset', convertToUnit(scrollbarWidth))\n\n    this.scrollElements.forEach((el, i) => {\n      this.initialOverflow[i] = el.style.overflowY\n      el.style.overflowY = 'hidden'\n      el.style.setProperty('--v-scrollbar-offset', convertToUnit(scrollbarWidth))\n    })\n  }\n\n  disable () {\n    this.scrollElements.forEach((el, i) => {\n      el.style.overflowY = this.initialOverflow[i]\n      el.style.removeProperty('--v-scrollbar-offset')\n    })\n    document.documentElement.style.removeProperty('--v-scrollbar-offset')\n  }\n}\n\nexport default defineComponent({\n  name: 'VOverlay',\n\n  directives: { ClickOutside },\n\n  inheritAttrs: false,\n\n  props: {\n    absolute: Boolean,\n    attach: {\n      type: [Boolean, String, Object] as PropType<boolean | string | Element>,\n      default: 'body',\n    },\n    eager: Boolean,\n    noClickAnimation: Boolean,\n    modelValue: Boolean,\n    origin: [String, Object] as Prop<string | Element>,\n    persistent: Boolean,\n    positionStrategy: {\n      type: String as PropType<typeof positionStrategies[number]>,\n      default: 'global',\n      validator: (val: any) => positionStrategies.includes(val),\n    },\n    scrim: {\n      type: [String, Boolean],\n      default: true,\n    },\n    scrollStrategy: {\n      type: String as PropType<typeof scrollStrategies[number]>,\n      default: 'block',\n      validator: (val: any) => scrollStrategies.includes(val),\n    },\n    ...makeThemeProps(),\n    ...makeTransitionProps(),\n  },\n\n  emits: {\n    'click:outside': (e: MouseEvent) => true,\n    'update:modelValue': (value: boolean) => true,\n  },\n\n  setup (props, { slots, attrs, emit }) {\n    const isActive = useProxiedModel(props, 'modelValue')\n\n    const { teleportTarget } = useTeleport(toRef(props, 'attach'))\n    const { themeClasses } = useTheme(props)\n    const { rtlClasses } = useRtl()\n    const { isBooted } = useBooted(isActive, toRef(props, 'eager'))\n    const scrimColor = useBackgroundColor(computed(() => {\n      return typeof props.scrim === 'string' ? props.scrim : null\n    }))\n\n    function onClickOutside (e: MouseEvent) {\n      emit('click:outside', e)\n\n      if (!props.persistent) isActive.value = false\n      else animateClick()\n    }\n\n    function closeConditional () {\n      return isActive.value\n    }\n\n    const activatorElement = ref<HTMLElement>()\n    function onActivatorClick (e: MouseEvent) {\n      activatorElement.value = (e.currentTarget || e.target) as HTMLElement\n      isActive.value = !isActive.value\n    }\n\n    function onKeydown (e: KeyboardEvent) {\n      if (e.key === 'Escape') {\n        if (!props.persistent) {\n          isActive.value = false\n        } else animateClick()\n      }\n    }\n\n    useBackButton(next => {\n      next(!isActive.value)\n\n      if (!props.persistent) isActive.value = false\n      else animateClick()\n    })\n\n    const content = ref<HTMLElement>()\n    watch(isActive, val => {\n      nextTick(() => {\n        if (val) {\n          content.value?.focus()\n        } else {\n          activatorElement.value?.focus()\n        }\n      })\n    })\n\n    const root = ref()\n    const top = ref<number>()\n    watch(() => isActive.value && props.absolute && teleportTarget.value == null, val => {\n      if (val) {\n        const scrollParent = getScrollParent(root.value)\n        if (scrollParent && scrollParent !== document.scrollingElement) {\n          top.value = scrollParent.scrollTop\n        }\n      }\n    })\n\n    // Add a quick \"bounce\" animation to the content\n    function animateClick () {\n      if (props.noClickAnimation) return\n\n      content.value?.animate([\n        { transformOrigin: 'center' },\n        { transform: 'scale(1.03)' },\n        { transformOrigin: 'center' },\n      ], {\n        duration: 150,\n        easing: standardEasing,\n      })\n    }\n\n    function onAfterLeave () {\n      if (!props.eager) isBooted.value = false\n    }\n\n    const scrollStrategy =\n      props.scrollStrategy === 'close' ? new CloseScrollStrategy({ content, isActive })\n      : props.scrollStrategy === 'block' ? new BlockScrollStrategy({ content })\n      : null\n\n    // TODO: reactive\n    if (scrollStrategy) {\n      watch(isActive, val => {\n        nextTick(() => {\n          val ? scrollStrategy.enable() : scrollStrategy.disable()\n        })\n      })\n    }\n\n    useRender(() => (\n      <>\n        { slots.activator?.({\n          isActive: isActive.value,\n          props: {\n            modelValue: isActive.value,\n            'onUpdate:modelValue': (val: boolean) => isActive.value = val,\n            onClick: onActivatorClick,\n          },\n        }) }\n        <Teleport\n          disabled={ !teleportTarget.value }\n          ref={ root }\n          to={ teleportTarget.value }\n        >\n          { isBooted.value && (\n            <div\n              class={[\n                'v-overlay',\n                {\n                  'v-overlay--absolute': props.absolute,\n                  'v-overlay--active': isActive.value,\n                },\n                themeClasses.value,\n                rtlClasses.value,\n              ]}\n              style={ top.value != null ? `top: ${convertToUnit(top.value)}` : undefined }\n              {...attrs}\n            >\n              <Scrim\n                color={ scrimColor }\n                modelValue={ isActive.value && !!props.scrim }\n              />\n              <MaybeTransition\n                appear\n                onAfterLeave={ onAfterLeave }\n                persisted\n                transition={ props.transition }\n              >\n                <div\n                  ref={ content }\n                  v-show={ isActive.value }\n                  v-click-outside={{ handler: onClickOutside, closeConditional }}\n                  class=\"v-overlay__content\"\n                  tabindex={ -1 }\n                  onKeydown={ onKeydown }\n                >\n                  { slots.default?.({ isActive }) }\n                </div>\n              </MaybeTransition>\n            </div>\n          )}\n        </Teleport>\n      </>\n    ))\n\n    return {\n      animateClick,\n      content,\n    }\n  },\n})\n"],"file":"VOverlay.mjs"}