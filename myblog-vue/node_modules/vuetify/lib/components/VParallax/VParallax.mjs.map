{"version":3,"sources":["../../../src/components/VParallax/VParallax.ts"],"names":["Translatable","mixins","baseMixins","extend","name","props","alt","type","String","default","height","Number","src","srcset","data","isBooted","computed","styles","display","opacity","transform","parallax","mounted","init","methods","img","$refs","complete","translate","listeners","addEventListener","objHeight","naturalHeight","render","h","imgData","staticClass","style","attrs","ref","container","content","$slots","on","$listeners"],"mappings":"AAAA;;AACA;AAEA;AACA,0B,CAEA;;OACOA,Y,6CAEP;;OAEOC,M;AAEP,MAAMC,UAAU,GAAGD,MAAM,CACvBD,YADuB,CAAzB;;AASA;AACA,eAAeE,UAAU,CAACC,MAAX,GAA6BA,MAA7B,CAAoC;AACjDC,EAAAA,IAAI,EAAE,YAD2C;AAGjDC,EAAAA,KAAK,EAAE;AACLC,IAAAA,GAAG,EAAE;AACHC,MAAAA,IAAI,EAAEC,MADH;AAEHC,MAAAA,OAAO,EAAE;AAFN,KADA;AAKLC,IAAAA,MAAM,EAAE;AACNH,MAAAA,IAAI,EAAE,CAACC,MAAD,EAASG,MAAT,CADA;AAENF,MAAAA,OAAO,EAAE;AAFH,KALH;AASLG,IAAAA,GAAG,EAAEJ,MATA;AAULK,IAAAA,MAAM,EAAEL;AAVH,GAH0C;AAgBjDM,EAAAA,IAAI,EAAE,OAAO;AACXC,IAAAA,QAAQ,EAAE;AADC,GAAP,CAhB2C;AAoBjDC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,GAAY;AAChB,aAAO;AACLC,QAAAA,OAAO,EAAE,OADJ;AAELC,QAAAA,OAAO,EAAE,KAAKJ,QAAL,GAAgB,CAAhB,GAAoB,CAFxB;AAGLK,QAAAA,SAAS,EAAG,mBAAkB,KAAKC,QAAS;AAHvC,OAAP;AAKD;;AAPO,GApBuC;;AA8BjDC,EAAAA,OAAO,GAAI;AACT,SAAKC,IAAL;AACD,GAhCgD;;AAkCjDC,EAAAA,OAAO,EAAE;AACPD,IAAAA,IAAI,GAAI;AACN,YAAME,GAAG,GAAG,KAAKC,KAAL,CAAWD,GAAvB;AAEA,UAAI,CAACA,GAAL,EAAU;;AAEV,UAAIA,GAAG,CAACE,QAAR,EAAkB;AAChB,aAAKC,SAAL;AACA,aAAKC,SAAL;AACD,OAHD,MAGO;AACLJ,QAAAA,GAAG,CAACK,gBAAJ,CAAqB,MAArB,EAA6B,MAAM;AACjC,eAAKF,SAAL;AACA,eAAKC,SAAL;AACD,SAHD,EAGG,KAHH;AAID;;AAED,WAAKd,QAAL,GAAgB,IAAhB;AACD,KAjBM;;AAkBPgB,IAAAA,SAAS,GAAI;AACX,aAAO,KAAKL,KAAL,CAAWD,GAAX,CAAeO,aAAtB;AACD;;AApBM,GAlCwC;;AAyDjDC,EAAAA,MAAM,CAAEC,CAAF,EAAY;AAChB,UAAMC,OAAkB,GAAG;AACzBC,MAAAA,WAAW,EAAE,mBADY;AAEzBC,MAAAA,KAAK,EAAE,KAAKpB,MAFa;AAGzBqB,MAAAA,KAAK,EAAE;AACL1B,QAAAA,GAAG,EAAE,KAAKA,GADL;AAELC,QAAAA,MAAM,EAAE,KAAKA,MAFR;AAGLP,QAAAA,GAAG,EAAE,KAAKA;AAHL,OAHkB;AAQzBiC,MAAAA,GAAG,EAAE;AARoB,KAA3B;AAWA,UAAMC,SAAS,GAAGN,CAAC,CAAC,KAAD,EAAQ;AACzBE,MAAAA,WAAW,EAAE;AADY,KAAR,EAEhB,CACDF,CAAC,CAAC,KAAD,EAAQC,OAAR,CADA,CAFgB,CAAnB;AAMA,UAAMM,OAAO,GAAGP,CAAC,CAAC,KAAD,EAAQ;AACvBE,MAAAA,WAAW,EAAE;AADU,KAAR,EAEd,KAAKM,MAAL,CAAYjC,OAFE,CAAjB;AAIA,WAAOyB,CAAC,CAAC,KAAD,EAAQ;AACdE,MAAAA,WAAW,EAAE,YADC;AAEdC,MAAAA,KAAK,EAAE;AACL3B,QAAAA,MAAM,EAAG,GAAE,KAAKA,MAAO;AADlB,OAFO;AAKdiC,MAAAA,EAAE,EAAE,KAAKC;AALK,KAAR,EAML,CAACJ,SAAD,EAAYC,OAAZ,CANK,CAAR;AAOD;;AAtFgD,CAApC,CAAf","sourcesContent":["// @ts-nocheck\n/* eslint-disable */\n\n// Style\nimport './VParallax.sass'\n\n// Mixins\nimport Translatable from '../../mixins/translatable'\n\n// Types\nimport { VNode, VNodeData } from 'vue/types/vnode'\nimport mixins from '../../util/mixins'\n\nconst baseMixins = mixins(\n  Translatable\n)\ninterface options extends InstanceType<typeof baseMixins> {\n  $refs: {\n    img: HTMLImageElement\n  }\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-parallax',\n\n  props: {\n    alt: {\n      type: String,\n      default: '',\n    },\n    height: {\n      type: [String, Number],\n      default: 500,\n    },\n    src: String,\n    srcset: String,\n  },\n\n  data: () => ({\n    isBooted: false,\n  }),\n\n  computed: {\n    styles (): object {\n      return {\n        display: 'block',\n        opacity: this.isBooted ? 1 : 0,\n        transform: `translate(-50%, ${this.parallax}px)`,\n      }\n    },\n  },\n\n  mounted () {\n    this.init()\n  },\n\n  methods: {\n    init () {\n      const img = this.$refs.img\n\n      if (!img) return\n\n      if (img.complete) {\n        this.translate()\n        this.listeners()\n      } else {\n        img.addEventListener('load', () => {\n          this.translate()\n          this.listeners()\n        }, false)\n      }\n\n      this.isBooted = true\n    },\n    objHeight () {\n      return this.$refs.img.naturalHeight\n    },\n  },\n\n  render (h): VNode {\n    const imgData: VNodeData = {\n      staticClass: 'v-parallax__image',\n      style: this.styles,\n      attrs: {\n        src: this.src,\n        srcset: this.srcset,\n        alt: this.alt,\n      },\n      ref: 'img',\n    }\n\n    const container = h('div', {\n      staticClass: 'v-parallax__image-container',\n    }, [\n      h('img', imgData),\n    ])\n\n    const content = h('div', {\n      staticClass: 'v-parallax__content',\n    }, this.$slots.default)\n\n    return h('div', {\n      staticClass: 'v-parallax',\n      style: {\n        height: `${this.height}px`,\n      },\n      on: this.$listeners,\n    }, [container, content])\n  },\n})\n"],"file":"VParallax.mjs"}