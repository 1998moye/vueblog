{"version":3,"sources":["../../../src/components/VList/VListItem.tsx"],"names":["VListItemAvatar","VListItemHeader","VListItemSubtitle","VListItemTitle","VAvatar","makeBorderProps","useBorder","makeDensityProps","useDensity","makeDimensionProps","useDimension","makeElevationProps","useElevation","makeRoundedProps","useRounded","makeRouterProps","useLink","makeTagProps","makeThemeProps","useTheme","genOverlays","makeVariantProps","useVariant","Ripple","computed","reactive","toRef","defineComponent","name","directives","props","active","Boolean","activeColor","String","activeClass","appendAvatar","appendIcon","disabled","link","prependAvatar","prependIcon","subtitle","title","variant","setup","attrs","slots","isActive","isExactActive","value","color","variantProps","textColor","themeClasses","borderClasses","colorClasses","colorStyles","variantClasses","densityClasses","dimensionStyles","elevationClasses","roundedClasses","Tag","isLink","tag","hasTitle","hasSubtitle","hasHeader","hasAppend","append","hasPrepend","prepend","isClickable","href","undefined","navigate","density","default"],"mappings":"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","sourcesContent":["// Styles\nimport './VListItem.sass'\n\n// Components\nimport VListItemAvatar from './VListItemAvatar'\nimport VListItemHeader from './VListItemHeader'\nimport VListItemSubtitle from './VListItemSubtitle'\nimport VListItemTitle from './VListItemTitle'\nimport { VAvatar } from '@/components/VAvatar'\n\n// Composables\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeRouterProps, useLink } from '@/composables/router'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, useTheme } from '@/composables/theme'\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Utilities\nimport { computed, reactive, toRef } from 'vue'\nimport { defineComponent } from '@/util'\n\nexport default defineComponent({\n  name: 'VListItem',\n\n  directives: { Ripple },\n\n  props: {\n    active: Boolean,\n    activeColor: String,\n    activeClass: String,\n    appendAvatar: String,\n    appendIcon: String,\n    disabled: Boolean,\n    link: Boolean,\n    prependAvatar: String,\n    prependIcon: String,\n    subtitle: String,\n    title: String,\n\n    ...makeBorderProps(),\n    ...makeDensityProps(),\n    ...makeDimensionProps(),\n    ...makeElevationProps(),\n    ...makeRoundedProps(),\n    ...makeRouterProps(),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n    ...makeVariantProps({ variant: 'text' } as const),\n  },\n\n  setup (props, { attrs, slots }) {\n    const link = useLink(props, attrs)\n    const isActive = computed(() => {\n      return props.active || link.isExactActive?.value\n    })\n    const activeColor = props.activeColor ?? props.color\n    const variantProps = reactive({\n      color: computed(() => (isActive.value ? activeColor : props.color)),\n      textColor: toRef(props, 'textColor'),\n      variant: toRef(props, 'variant'),\n    })\n\n    const { themeClasses } = useTheme(props)\n    const { borderClasses } = useBorder(props, 'v-list-item')\n    const { colorClasses, colorStyles, variantClasses } = useVariant(variantProps, 'v-list-item')\n    const { densityClasses } = useDensity(props, 'v-list-item')\n    const { dimensionStyles } = useDimension(props)\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(props, 'v-list-item')\n\n    return () => {\n      const Tag = (link.isLink.value) ? 'a' : props.tag\n      const hasTitle = (slots.title || props.title)\n      const hasSubtitle = (slots.subtitle || props.subtitle)\n      const hasHeader = !!(hasTitle || hasSubtitle)\n      const hasAppend = (slots.append || props.appendAvatar || props.appendIcon)\n      const hasPrepend = (slots.prepend || props.prependAvatar || props.prependIcon)\n      const isClickable = !props.disabled && (link.isClickable.value || props.link)\n\n      return (\n        <Tag\n          class={[\n            'v-list-item',\n            {\n              'v-list-item--active': isActive.value,\n              'v-list-item--disabled': props.disabled,\n              'v-list-item--link': isClickable,\n              [`${props.activeClass}`]: isActive.value && props.activeClass,\n            },\n            themeClasses.value,\n            borderClasses.value,\n            colorClasses.value,\n            densityClasses.value,\n            elevationClasses.value,\n            roundedClasses.value,\n            variantClasses.value,\n          ]}\n          style={[\n            colorStyles.value,\n            dimensionStyles.value,\n          ]}\n          href={ link.href.value }\n          tabindex={ isClickable ? 0 : undefined }\n          onClick={ isClickable && link.navigate }\n          v-ripple={ isClickable }\n        >\n          { genOverlays(!!(isClickable || isActive.value), 'v-list-item') }\n\n          { hasPrepend && (\n            slots.prepend\n              ? slots.prepend()\n              : (\n                <VListItemAvatar left>\n                  <VAvatar\n                    density={ props.density }\n                    icon={ props.prependIcon }\n                    image={ props.prependAvatar }\n                  />\n                </VListItemAvatar>\n              )\n          ) }\n\n          { hasHeader && (\n            <VListItemHeader>\n              { hasTitle && (\n                <VListItemTitle>\n                  { slots.title\n                    ? slots.title()\n                    : props.title\n                  }\n                </VListItemTitle>\n              ) }\n\n              { hasSubtitle && (\n                <VListItemSubtitle>\n                  { slots.subtitle\n                    ? slots.subtitle()\n                    : props.subtitle\n                  }\n                </VListItemSubtitle>\n              ) }\n            </VListItemHeader>\n          ) }\n\n          { slots.default?.() }\n\n          { hasAppend && (\n            slots.append\n              ? slots.append()\n              : (\n                <VListItemAvatar right>\n                  <VAvatar\n                    density={ props.density }\n                    icon={ props.appendIcon }\n                    image={ props.appendAvatar }\n                  />\n                </VListItemAvatar>\n              )\n          ) }\n        </Tag>\n      )\n    }\n  },\n})\n"],"file":"VListItem.mjs"}