{"version":3,"sources":["../../../src/components/VExpansionPanel/VExpansionPanels.ts"],"names":["BaseItemGroup","breaking","extend","name","provide","expansionPanels","props","accordion","Boolean","disabled","flat","hover","focusable","inset","popout","readonly","tile","computed","classes","options","call","created","$attrs","hasOwnProperty","Array","isArray","value","length","methods","updateItem","item","index","getValue","nextValue","isActive","toggleMethod","nextIsActive"],"mappings":"AAAA;;AACA;AAEA;AACA,gC,CAEA;;SACSA,a;AAGT;SACSC,Q,kCAET;;AAGA;AACA,eAAeD,aAAa,CAACE,MAAd,CAAqB;AAClCC,EAAAA,IAAI,EAAE,oBAD4B;;AAGlCC,EAAAA,OAAO,GAAY;AACjB,WAAO;AACLC,MAAAA,eAAe,EAAE;AADZ,KAAP;AAGD,GAPiC;;AASlCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAEC,OADN;AAELC,IAAAA,QAAQ,EAAED,OAFL;AAGLE,IAAAA,IAAI,EAAEF,OAHD;AAILG,IAAAA,KAAK,EAAEH,OAJF;AAKLI,IAAAA,SAAS,EAAEJ,OALN;AAMLK,IAAAA,KAAK,EAAEL,OANF;AAOLM,IAAAA,MAAM,EAAEN,OAPH;AAQLO,IAAAA,QAAQ,EAAEP,OARL;AASLQ,IAAAA,IAAI,EAAER;AATD,GAT2B;AAqBlCS,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,GAAY;AACjB,aAAO,EACL,GAAGlB,aAAa,CAACmB,OAAd,CAAsBF,QAAtB,CAA+BC,OAA/B,CAAuCE,IAAvC,CAA4C,IAA5C,CADE;AAEL,8BAAsB,IAFjB;AAGL,yCAAiC,KAAKb,SAHjC;AAIL,oCAA4B,KAAKG,IAJ5B;AAKL,qCAA6B,KAAKC,KAL7B;AAML,yCAAiC,KAAKC,SANjC;AAOL,qCAA6B,KAAKC,KAP7B;AAQL,sCAA8B,KAAKC,MAR9B;AASL,oCAA4B,KAAKE;AAT5B,OAAP;AAWD;;AAbO,GArBwB;;AAqClCK,EAAAA,OAAO,GAAI;AACT;AACA,QAAI,KAAKC,MAAL,CAAYC,cAAZ,CAA2B,QAA3B,CAAJ,EAA0C;AACxCtB,MAAAA,QAAQ,CAAC,QAAD,EAAW,UAAX,EAAuB,IAAvB,CAAR;AACD;AAED;;;AACA,QACEuB,KAAK,CAACC,OAAN,CAAc,KAAKC,KAAnB,KACA,KAAKA,KAAL,CAAWC,MAAX,GAAoB,CADpB,IAEA,OAAO,KAAKD,KAAL,CAAW,CAAX,CAAP,KAAyB,SAH3B,EAIE;AACAzB,MAAAA,QAAQ,CAAC,8BAAD,EAAiC,iBAAjC,EAAoD,IAApD,CAAR;AACD;AACF,GAnDiC;;AAqDlC2B,EAAAA,OAAO,EAAE;AACPC,IAAAA,UAAU,CAAEC,IAAF,EAAqDC,KAArD,EAAoE;AAC5E,YAAML,KAAK,GAAG,KAAKM,QAAL,CAAcF,IAAd,EAAoBC,KAApB,CAAd;AACA,YAAME,SAAS,GAAG,KAAKD,QAAL,CAAcF,IAAd,EAAoBC,KAAK,GAAG,CAA5B,CAAlB;AAEAD,MAAAA,IAAI,CAACI,QAAL,GAAgB,KAAKC,YAAL,CAAkBT,KAAlB,CAAhB;AACAI,MAAAA,IAAI,CAACM,YAAL,GAAoB,KAAKD,YAAL,CAAkBF,SAAlB,CAApB;AACD;;AAPM;AArDyB,CAArB,CAAf","sourcesContent":["// @ts-nocheck\n/* eslint-disable */\n\n// Styles\nimport './VExpansionPanel.sass'\n\n// Components\nimport { BaseItemGroup, GroupableInstance } from '../VItemGroup/VItemGroup'\nimport VExpansionPanel from './VExpansionPanel'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\ninterface VExpansionPanelInstance extends InstanceType<typeof VExpansionPanel> {}\n\n/* @vue/component */\nexport default BaseItemGroup.extend({\n  name: 'v-expansion-panels',\n\n  provide (): object {\n    return {\n      expansionPanels: this,\n    }\n  },\n\n  props: {\n    accordion: Boolean,\n    disabled: Boolean,\n    flat: Boolean,\n    hover: Boolean,\n    focusable: Boolean,\n    inset: Boolean,\n    popout: Boolean,\n    readonly: Boolean,\n    tile: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-expansion-panels': true,\n        'v-expansion-panels--accordion': this.accordion,\n        'v-expansion-panels--flat': this.flat,\n        'v-expansion-panels--hover': this.hover,\n        'v-expansion-panels--focusable': this.focusable,\n        'v-expansion-panels--inset': this.inset,\n        'v-expansion-panels--popout': this.popout,\n        'v-expansion-panels--tile': this.tile,\n      }\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('expand')) {\n      breaking('expand', 'multiple', this)\n    }\n\n    /* istanbul ignore next */\n    if (\n      Array.isArray(this.value) &&\n      this.value.length > 0 &&\n      typeof this.value[0] === 'boolean'\n    ) {\n      breaking(':value=\"[true, false, true]\"', ':value=\"[0, 2]\"', this)\n    }\n  },\n\n  methods: {\n    updateItem (item: GroupableInstance & VExpansionPanelInstance, index: number) {\n      const value = this.getValue(item, index)\n      const nextValue = this.getValue(item, index + 1)\n\n      item.isActive = this.toggleMethod(value)\n      item.nextIsActive = this.toggleMethod(nextValue)\n    },\n  },\n})\n"],"file":"VExpansionPanels.mjs"}