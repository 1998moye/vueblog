{"version":3,"sources":["../../../src/components/VBreadcrumbs/VBreadcrumbs.tsx"],"names":["VBreadcrumbsItem","VBreadcrumbsDivider","VIcon","makeDensityProps","useDensity","makeRoundedProps","useRounded","makeTagProps","useTextColor","computed","provide","toRef","defineComponent","VBreadcrumbsSymbol","Symbol","for","name","props","color","String","disabled","Boolean","divider","type","default","icon","items","Array","tag","setup","slots","densityClasses","roundedClasses","textColorClasses","textColorStyles","map","item","index","array","length","text","value"],"mappings":"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","sourcesContent":["// Styles\nimport './VBreadcrumbs.sass'\n\n// Components\nimport VBreadcrumbsItem from './VBreadcrumbsItem'\nimport VBreadcrumbsDivider from './VBreadcrumbsDivider'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { useTextColor } from '@/composables/color'\n\n// Utilities\nimport { computed, provide, toRef } from 'vue'\nimport { defineComponent } from '@/util'\n\n// Types\nimport type { InjectionKey, PropType, Ref } from 'vue'\nimport type { LinkProps } from '@/composables/router'\n\ninterface BreadcrumbsContext {\n  color: Ref<string | undefined>\n  disabled: Ref<boolean>\n}\n\nexport const VBreadcrumbsSymbol: InjectionKey<BreadcrumbsContext> = Symbol.for('vuetify:breadcrumbs')\n\nexport type BreadcrumbItem = string | (LinkProps & {\n  text: string\n})\n\nexport default defineComponent({\n  name: 'VBreadcrumbs',\n\n  props: {\n    color: String,\n    disabled: Boolean,\n    divider: {\n      type: String,\n      default: '/',\n    },\n    icon: String,\n    items: {\n      type: Array as PropType<BreadcrumbItem[]>,\n      default: () => ([]),\n    },\n\n    ...makeDensityProps(),\n    ...makeRoundedProps(),\n    ...makeTagProps({ tag: 'ul' }),\n  },\n\n  setup (props, { slots }) {\n    const { densityClasses } = useDensity(props, 'v-breadcrumbs')\n    const { roundedClasses } = useRounded(props, 'v-breadcrumbs')\n    const { textColorClasses, textColorStyles } = useTextColor(toRef(props, 'color'))\n    const items = computed(() => {\n      return props.items.map((item, index, array) => ({\n        props: {\n          disabled: index >= array.length - 1,\n          ...(typeof item === 'string' ? { text: item } : item),\n        },\n      }))\n    })\n\n    provide(VBreadcrumbsSymbol, {\n      color: toRef(props, 'color'),\n      disabled: toRef(props, 'disabled'),\n    })\n\n    return () => (\n      <props.tag\n        class={[\n          'v-breadcrumbs',\n          densityClasses.value,\n          roundedClasses.value,\n          textColorClasses.value,\n        ]}\n        style={[\n          textColorStyles.value,\n        ]}\n      >\n        { props.icon && (\n          <VIcon icon={ props.icon } left />\n        ) }\n\n        { items.value.map((item, index) => (\n          <>\n            <VBreadcrumbsItem\n              key={ index }\n              { ...item.props }\n            >\n              { slots.item?.({ ...item, index }) }\n            </VBreadcrumbsItem>\n\n            { index < props.items.length - 1 && (\n              <VBreadcrumbsDivider>\n                { slots.divider ? slots.divider({ ...item, index }) : props.divider }\n              </VBreadcrumbsDivider>\n            ) }\n          </>\n        )) }\n\n        { slots.default?.() }\n      </props.tag>\n    )\n  },\n})\n"],"file":"VBreadcrumbs.mjs"}