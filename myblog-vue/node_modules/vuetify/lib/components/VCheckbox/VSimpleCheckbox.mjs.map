{"version":3,"sources":["../../../src/components/VCheckbox/VSimpleCheckbox.ts"],"names":["ripple","Vue","VIcon","Colorable","Themeable","mergeData","wrapInArray","extend","name","functional","directives","props","options","disabled","Boolean","type","default","value","indeterminate","indeterminateIcon","String","onIcon","offIcon","render","h","data","listeners","children","icon","push","methods","setTextColor","color","dark","light","staticClass","center","class","on","click","e","stopPropagation","input","forEach","f"],"mappings":"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","sourcesContent":["// @ts-nocheck\n/* eslint-disable */\n\nimport './VSimpleCheckbox.sass'\n\nimport ripple from '../../directives/ripple'\n\nimport Vue, { VNode, VNodeDirective } from 'vue'\nimport { VIcon } from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport { wrapInArray } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'v-simple-checkbox',\n\n  functional: true,\n\n  directives: {\n    ripple,\n  },\n\n  props: {\n    ...Colorable.options.props,\n    ...Themeable.options.props,\n    disabled: Boolean,\n    ripple: {\n      type: Boolean,\n      default: true,\n    },\n    value: Boolean,\n    indeterminate: Boolean,\n    indeterminateIcon: {\n      type: String,\n      default: '$checkboxIndeterminate',\n    },\n    onIcon: {\n      type: String,\n      default: '$checkboxOn',\n    },\n    offIcon: {\n      type: String,\n      default: '$checkboxOff',\n    },\n  },\n\n  render (h, { props, data, listeners }): VNode {\n    const children = []\n    let icon = props.offIcon\n    if (props.indeterminate) icon = props.indeterminateIcon\n    else if (props.value) icon = props.onIcon\n\n    children.push(h(VIcon, Colorable.options.methods.setTextColor(props.value && props.color, {\n      props: {\n        disabled: props.disabled,\n        dark: props.dark,\n        light: props.light,\n      },\n    }), icon))\n\n    if (props.ripple && !props.disabled) {\n      const ripple = h('div', Colorable.options.methods.setTextColor(props.color, {\n        staticClass: 'v-input--selection-controls__ripple',\n        directives: [{\n          name: 'ripple',\n          value: { center: true },\n        }] as VNodeDirective[],\n      }))\n\n      children.push(ripple)\n    }\n\n    return h('div',\n      mergeData(data, {\n        class: {\n          'v-simple-checkbox': true,\n          'v-simple-checkbox--disabled': props.disabled,\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            e.stopPropagation()\n\n            if (data.on && data.on.input && !props.disabled) {\n              wrapInArray(data.on.input).forEach(f => f(!props.value))\n            }\n          },\n        },\n      }), [\n        h('div', { staticClass: 'v-input--selection-controls__input' }, children),\n      ])\n  },\n})\n"],"file":"VSimpleCheckbox.mjs"}