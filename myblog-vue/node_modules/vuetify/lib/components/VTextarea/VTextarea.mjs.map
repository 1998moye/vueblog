{"version":3,"sources":["../../../src/components/VTextarea/VTextarea.ts"],"names":["VTextField","mixins","baseMixins","extend","name","props","autoGrow","Boolean","noResize","rowHeight","type","Number","String","default","validator","v","isNaN","parseFloat","rows","parseInt","computed","classes","noResizeHandle","options","call","watch","lazyValue","$nextTick","calculateInputHeight","mounted","setTimeout","methods","input","$refs","style","height","scrollHeight","minHeight","Math","max","genInput","tag","data","attrs","onInput","e","onKeyDown","isFocused","keyCode","stopPropagation","$emit"],"mappings":"AAAA;;AACA;AAEA;AACA,0B,CAEA;;OACOA,U,sCAEP;;OACOC,M,+BAEP;;AASA,MAAMC,UAAU,GAAGD,MAAM,CAGvBD,UAHuB,CAAzB;AAMA;;AACA,eAAeE,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,IAAI,EAAE,YADyB;AAG/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAEC,OADL;AAELC,IAAAA,QAAQ,EAAED,OAFL;AAGLE,IAAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAE,CAACC,MAAD,EAASC,MAAT,CADG;AAETC,MAAAA,OAAO,EAAE,EAFA;AAGTC,MAAAA,SAAS,EAAGC,CAAD,IAAY,CAACC,KAAK,CAACC,UAAU,CAACF,CAAD,CAAX;AAHpB,KAHN;AAQLG,IAAAA,IAAI,EAAE;AACJR,MAAAA,IAAI,EAAE,CAACC,MAAD,EAASC,MAAT,CADF;AAEJC,MAAAA,OAAO,EAAE,CAFL;AAGJC,MAAAA,SAAS,EAAGC,CAAD,IAAY,CAACC,KAAK,CAACG,QAAQ,CAACJ,CAAD,EAAI,EAAJ,CAAT;AAHzB;AARD,GAHwB;AAkB/BK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,GAAY;AACjB,aAAO;AACL,sBAAc,IADT;AAEL,iCAAyB,KAAKf,QAFzB;AAGL,iCAAyB,KAAKgB,cAHzB;AAIL,WAAGtB,UAAU,CAACuB,OAAX,CAAmBH,QAAnB,CAA4BC,OAA5B,CAAoCG,IAApC,CAAyC,IAAzC;AAJE,OAAP;AAMD,KARO;;AASRF,IAAAA,cAAc,GAAa;AACzB,aAAO,KAAKd,QAAL,IAAiB,KAAKF,QAA7B;AACD;;AAXO,GAlBqB;AAgC/BmB,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,GAAI;AACX,WAAKpB,QAAL,IAAiB,KAAKqB,SAAL,CAAe,KAAKC,oBAApB,CAAjB;AACD,KAHI;;AAILnB,IAAAA,SAAS,GAAI;AACX,WAAKH,QAAL,IAAiB,KAAKqB,SAAL,CAAe,KAAKC,oBAApB,CAAjB;AACD;;AANI,GAhCwB;;AAyC/BC,EAAAA,OAAO,GAAI;AACTC,IAAAA,UAAU,CAAC,MAAM;AACf,WAAKxB,QAAL,IAAiB,KAAKsB,oBAAL,EAAjB;AACD,KAFS,EAEP,CAFO,CAAV;AAGD,GA7C8B;;AA+C/BG,EAAAA,OAAO,EAAE;AACPH,IAAAA,oBAAoB,GAAI;AACtB,YAAMI,KAAK,GAAG,KAAKC,KAAL,CAAWD,KAAzB;AACA,UAAI,CAACA,KAAL,EAAY;AAEZA,MAAAA,KAAK,CAACE,KAAN,CAAYC,MAAZ,GAAqB,GAArB;AACA,YAAMA,MAAM,GAAGH,KAAK,CAACI,YAArB;AACA,YAAMC,SAAS,GAAGlB,QAAQ,CAAC,KAAKD,IAAN,EAAY,EAAZ,CAAR,GAA0BD,UAAU,CAAC,KAAKR,SAAN,CAAtD,CANsB,CAOtB;AACA;;AACAuB,MAAAA,KAAK,CAACE,KAAN,CAAYC,MAAZ,GAAqBG,IAAI,CAACC,GAAL,CAASF,SAAT,EAAoBF,MAApB,IAA8B,IAAnD;AACD,KAXM;;AAYPK,IAAAA,QAAQ,GAAI;AACV,YAAMR,KAAK,GAAGhC,UAAU,CAACuB,OAAX,CAAmBQ,OAAnB,CAA2BS,QAA3B,CAAoChB,IAApC,CAAyC,IAAzC,CAAd;AAEAQ,MAAAA,KAAK,CAACS,GAAN,GAAY,UAAZ;AACA,aAAOT,KAAK,CAACU,IAAN,CAAYC,KAAZ,CAAmBjC,IAA1B;AACAsB,MAAAA,KAAK,CAACU,IAAN,CAAYC,KAAZ,CAAmBzB,IAAnB,GAA0B,KAAKA,IAA/B;AAEA,aAAOc,KAAP;AACD,KApBM;;AAqBPY,IAAAA,OAAO,CAAEC,CAAF,EAAY;AACjB7C,MAAAA,UAAU,CAACuB,OAAX,CAAmBQ,OAAnB,CAA2Ba,OAA3B,CAAmCpB,IAAnC,CAAwC,IAAxC,EAA8CqB,CAA9C;AACA,WAAKvC,QAAL,IAAiB,KAAKsB,oBAAL,EAAjB;AACD,KAxBM;;AAyBPkB,IAAAA,SAAS,CAAED,CAAF,EAAoB;AAC3B;AACA;AACA;AACA,UAAI,KAAKE,SAAL,IAAkBF,CAAC,CAACG,OAAF,KAAc,EAApC,EAAwC;AACtCH,QAAAA,CAAC,CAACI,eAAF;AACD;;AAED,WAAKC,KAAL,CAAW,SAAX,EAAsBL,CAAtB;AACD;;AAlCM;AA/CsB,CAAlB,CAAf","sourcesContent":["// @ts-nocheck\n/* eslint-disable */\n\n// Styles\nimport './VTextarea.sass'\n\n// Extensions\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport Vue from 'vue'\n\ninterface options extends Vue {\n  $refs: {\n    input: HTMLTextAreaElement\n  }\n}\n\nconst baseMixins = mixins<options &\n  InstanceType<typeof VTextField>\n>(\n  VTextField\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-textarea',\n\n  props: {\n    autoGrow: Boolean,\n    noResize: Boolean,\n    rowHeight: {\n      type: [Number, String],\n      default: 24,\n      validator: (v: any) => !isNaN(parseFloat(v)),\n    },\n    rows: {\n      type: [Number, String],\n      default: 5,\n      validator: (v: any) => !isNaN(parseInt(v, 10)),\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-textarea': true,\n        'v-textarea--auto-grow': this.autoGrow,\n        'v-textarea--no-resize': this.noResizeHandle,\n        ...VTextField.options.computed.classes.call(this),\n      }\n    },\n    noResizeHandle (): boolean {\n      return this.noResize || this.autoGrow\n    },\n  },\n\n  watch: {\n    lazyValue () {\n      this.autoGrow && this.$nextTick(this.calculateInputHeight)\n    },\n    rowHeight () {\n      this.autoGrow && this.$nextTick(this.calculateInputHeight)\n    },\n  },\n\n  mounted () {\n    setTimeout(() => {\n      this.autoGrow && this.calculateInputHeight()\n    }, 0)\n  },\n\n  methods: {\n    calculateInputHeight () {\n      const input = this.$refs.input\n      if (!input) return\n\n      input.style.height = '0'\n      const height = input.scrollHeight\n      const minHeight = parseInt(this.rows, 10) * parseFloat(this.rowHeight)\n      // This has to be done ASAP, waiting for Vue\n      // to update the DOM causes ugly layout jumping\n      input.style.height = Math.max(minHeight, height) + 'px'\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.tag = 'textarea'\n      delete input.data!.attrs!.type\n      input.data!.attrs!.rows = this.rows\n\n      return input\n    },\n    onInput (e: Event) {\n      VTextField.options.methods.onInput.call(this, e)\n      this.autoGrow && this.calculateInputHeight()\n    },\n    onKeyDown (e: KeyboardEvent) {\n      // Prevents closing of a\n      // dialog when pressing\n      // enter\n      if (this.isFocused && e.keyCode === 13) {\n        e.stopPropagation()\n      }\n\n      this.$emit('keydown', e)\n    },\n  },\n})\n"],"file":"VTextarea.mjs"}